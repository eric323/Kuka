<apex:page standardStylesheets="false" sidebar="false" showHeader="false" controller="APTSMD_ApttusLabAngularJS" applyBodyTag="false" cache="false" applyHtmlTag="false" docType="html-5.0" language="{!UserLanguage}" >
<apex:variable var="envPath" value="{!URLFOR($Resource.APTSMD_ApttusLabApp1,'/ApttusLabApp1')}" />
<apex:variable var="envPathslds" value="{!URLFOR($Resource.APTSMD_SalesforceLightningDesign_old)}" />
<html xmlns:ng="https://angularjs.org" ng-app="apttuslab" ng-cloak="true" lang="en">
<head>
    <meta charset="UTF-8" />
    <title>{!title}</title>
    <meta name="description" content=""/>
    <meta name="keywords" content=""/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
    <link rel="icon shortcut" href="{!URLFOR($Resource.APTSDMP_FavIcon)}" />
    <link rel="icon" href="/ecomm/resource/1442280413000/GreenTechIcon" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="{!envPath}/img/favicon/apple-touch-icon-144x144-precomposed.png"/>
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="{!envPath}/img/favicon/apple-touch-icon-72x72-precomposed.png"/>
    <link rel="apple-touch-icon-precomposed" href="{!envPath}/img/favicon/apple-touch-icon-precomposed.png"/>
    <apex:stylesheet value="{!URLFOR($Resource.APTSMD_KUKAStyles)}"/>
    <apex:stylesheet value="{!URLFOR($Resource.APTSDMP_KUKAIcons)}"/>
    <link href="{!URLFOR($Resource.APTSMD_SalesforceLightningDesign,'assets/styles/salesforce-lightning-design-system-vf.css')}" rel="stylesheet" type="text/css" />
    <!-- // Favorite Icons -->
    <apex:include pageName="APTSMD_ApttusLabServices"/>
    <apex:includeScript value="{!envPath}/js/angular.min.js"/>
    <!-- GENERAL CSS FILES -->
    <!--<link href='https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700|Roboto:500italic,400|Roboto+Condensed:300italic,700,400' rel='stylesheet' type='text/css'/>-->
    <apex:includeScript value="{!envPath}/js/jquery.min.js"/>
    <apex:includeScript value="{!envPath}/js/modernizr.min.js"/>
    <apex:includeScript value="{!envPath}/js/underscore.js"/>
    <apex:includeScript value="{!envPath}/js/spin.min.js"/>
    <apex:includeScript value="{!envPath}/js/checkout.js"/>
    <apex:includeScript value="{!envPath}/js/jquery.waiting.js"/>
    <apex:includeScript value="{!envPath}/js/jquery.waiting.js"/>
    <apex:includeScript value="{!envPath}/js/highcharts.js"/>
    <apex:includeScript value="{!envPath}/js/exporting.js"/>
    <apex:includeScript value="{!envPath}/js/highcharts-3d.js"/>



    <!--  <apex:includeScript value="{!envPath}/js/ui-bootstrap-1.2.5.min.js"/> -->
    <!-- <apex:includeScript value="{!envPath}/js/ui-bootstrap-0.12.0.js"/> -->
    <script type="text/javascript" src="https://angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.12.0.js"></script>
    <script src="{!URLFOR($Resource.APTSDMP_Bootstrap,'angular-sanitize.js')}"></script>

    <apex:includeScript value="{!envPath}/js/jquery.bxslider.min.js"/><!--for Recommended caraousel-->
    <link rel='stylesheet' href='{!envPath}/css/jquery.bxslider.css'/><!--for Recommended caraousel-->

    <link rel='stylesheet' href='{!envPath}/css/eb935c365a9e0848bb3cf62a98be447e.css'/>
    <link rel='stylesheet' href='{!envPath}/css/845eeb7c54bf69716dd03cf364f056f5.css'/>
    <link rel='stylesheet' href="{!URLFOR($Resource.APTSMD_ApttusLabApp1,'ApttusLabApp1/css/b0b39c07026341b17778a01fc29c8258.css')}"/>
    <link rel='stylesheet' href='{!envPath}/css/owl.carousel.css'/>
    <link rel='stylesheet' href='{!envPath}/css/jquery-ui.css'/>
    <link rel='stylesheet' href='{!envPath}/css/owl.theme.css'/>
    <link rel='stylesheet' href='{!envPath}/css/prodItem.css'/><!-- For Radio Button styling in bundle page-->
    <link rel="stylesheet" href="{!URLFOR($Resource.APTSDMP_Bootstrap,'font-awesome.min.css')}"/>
    <link rel="stylesheet" href="{!URLFOR($Resource.APTSDMP_Bootstrap,'bootstrap.min.css')}"/>
    <link rel='stylesheet' href='{!envPathslds}/assets/styles/salesforce-lightning-design-system-vf.css'/>
                <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
                <script src="{!URLFOR($Resource.APTSDMP_Bootstrap,'bootstrap.min.js')}"></script>-->
                <style>

                    @font-face {
                        font-family: "Bulo";
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-WEB.eot')});
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-WEB.eot')}?#iefix) format("embedded-opentype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-WEB.woff2')}) format("woff2"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-WEB.woff')}) format("woff"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-WEB.ttf')}) format("truetype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-WEB.svg')}#KUKABulo-Regular) format("svg");
                        font-weight: normal;
                        font-style: normal;
                    }

                    @font-face {
                        font-family: "Bulo";
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-Bold-WEB.eot')});
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-Bold-WEB.eot')}?#iefix) format("embedded-opentype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-Bold-WEB.woff2')}) format("woff2"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-Bold-WEB.woff')}) format("woff"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-Bold-WEB.ttf')}) format("truetype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Bulo-Webfonts/KUKA-Bulo-Bold-WEB.svg')}#KUKABulo-Bold) format("svg");
                        font-weight: bold;
                        font-style: normal;
                    }

                    @font-face {
                        font-family: "icomoon";
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'icomoon/icomoon.eot')}?yysf2p);
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'icomoon/icomoon.eot')}?yysf2p#iefix) format("embedded-opentype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'icomoon/icomoon.ttf')}?yysf2p) format("truetype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'icomoon/icomoon.woff')}?yysf2p) format("woff"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'icomoon/icomoon.svg')}?yysf2p#icomoon) format("svg");
                        font-weight: normal;
                        font-style: normal;
                    }
                    @font-face {
                        font-family: "KIcon";
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Brand_Iconfont/KUKA-Brand_Iconfont.eot')}?yysf2p);
                        src: url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Brand_Iconfont/KUKA-Brand_Iconfont.eot')}?yysf2p#iefix) format("embedded-opentype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Brand_Iconfont/KUKA-Brand_Iconfont.ttf')}?yysf2p) format("truetype"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Brand_Iconfont/KUKA-Brand_Iconfont.woff')}?yysf2p) format("woff"), url({!URLFOR($Resource.APTSDMP_KUKAFonts, 'KUKA-Brand_Iconfont/KUKA-Brand_Iconfont.svg')}?yysf2p#icomoon) format("svg");
                        font-weight: normal;
                        font-style: normal;
                    }
                    *
                    {
                        font-family: "Bulo" !important;
                    }
                    i
                    {
                        font-family: "icomoon" !important;
                        font-size: 26px;
                    }
                    .cart-icon
                    {
                    margin-left: 10px;
                        font-size: 20pt;
                        font-family: "KIcon" !important;
                    }
                    .cart-icon:before
                    {
                        content: "&#xE992;";
                    }
                    .strike-label{
                        text-decoration: line-through;
                    }
                    .nav-pills>li.active>a, .nav-pills>li.active>a:focus, .nav-pills>li.active>a:hover{
                        border-bottom: 5px solid #337ab7 !important;
                        border-radius: 0 !important;
                    }
                    .nav-pills>li.active>a, .nav-pills>li.active>a:focus, .nav-pills>li.active>a{
                        border-bottom: 5px solid #337ab7 !important;
                        border-radius: 0 !important;
                    }
                    .nav-pills>li.active>a, .nav-pills>li.active>a:hover, .nav-pills>li.active>a:focus{
                        border-bottom: 5px solid #337ab7 !important;
                        border-radius: 0 !important;
                    }
                    .evenOptRow{
                        padding: 0.3rem 1rem;
                        background-color: #dedfe0;/*#F7F8F9;*/
                        margin-right: 1%;
                    }
                    .oddOptRow{
                        padding: 0.3rem 1rem;
                        margin-right: 1%;
                    }
                    .smallname = {
                        width: 100px;
                    }
                    .slds a:focus {
                        text-decoration: none !important;
                        color: none !important; */
                    }
                    .tbl-cart th {
                        padding-top: 5px;
                        padding-bottom: 5px;
                    }
                    .tbl-cart td {
                        background: #F6F6F6 !important;
                        border: 1px white solid;
                        color: #787C80 !important;

                    }
                    .tbl-cart td:not(:last-child):after {
                        background: white;
                    }
                    #owl-demo .owl-item>div {
                        /*background: #3BA9A4!important;*/
                        color:white;
                        height:350px;;
                        border-radius: 3px;
                        padding:0;


                    }
                    #owl-demo .owl-item>div img{
                        border-radius: 0;
                        width: 100%;
                        max-width: 100%;
                        height: 350px;
                    }
                    .slds .slds-button--brand {
                        background-color : #3b78e7;
                        border:1px solid #3b78e7;
                        color:white!important;
                    }

                    .slds .slds-button--brand:hover, .slds .slds-button--brand:focus {
                        background-color : #005fb2;
                        border:1px solid #005fb2;
                        color:white!important;
                    }

                    .iconfont-th {
                        color:#81AD4D!important;
                    }

                    .iconfont-list {
                        color:#81AD4D!important;
                    }

                    .sidebar .side-section-header{
                        /*background : #3BA9A4!important;*/
                    }

                    .product-medialist .item .close{
                        background : #0070D2!important;
                        font: initial;
                    }
                    .tbl-cart .close{
                        background : #0070D2!important;
                        font: initial;
                    }
                    .qty-btn-group{
                        border: 0!important;
                    }/*
                    .panel-default>.panel-heading{
                        background: #ECEDEF!important;
                        text-align: left !important;
                        border: 1px white solid;
                    }*/
                    /*.checkout .panel-body{
                        background: transparent;
                    }*/
                    .totals>tbody>tr>td {
                        text-align: right;
                    }
                    .header-top .cart-notification{
                        background: #706f6f!important;
                    }
                    .iconfont-shopping-cart {
                        font-size: 25px;
                        font-size: 1.4vw;
                    }
                    #total-cart{
                        color: #706f6f!important;
                    }
                    .products-view .breadcrumb-container{
                        height:auto!important
                    }
                    .header-top{
                        margin-top: 0px !important;
                        height: 67px!important;
                    }
                    .modal-body .big-image{
                        height:auto!important;
                    }
                    .product-preview .big-image{
                        margin-right:0px!important;
                        margin-bottom: 20px;

                    }
                    .slds .slds-modal-backdrop--open{
                        opacity: 0.3;
                    }
                    /*Price slider color set here*/
                    .ui-widget-header{
                        background:#FF6000 url("images/ui-bg_highlight-soft_75_cccccc_1x100.png") 50% 50% repeat-x
                    }
                    .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default{
                        border-radius:50px;
                    }
                    .slds .slds-tabs--default__nav{
                        border:0px!important;
                    }
                    .slds .slds-tabs--default__nav .slds-tabs__item a{
                        text-overflow: inherit!important;
                    }
                    .product .entry-media{
                        min-height:auto!important;
                    }
                    <!-- for catalog page product section-->
                    .cart-pad-right{
                        padding-right: 1px !important;
                    }
                    .cart-pad-left{
                        padding-left: 1px !important;
                    }
                    .row-space{
                        margin-top: 6px !important;
                        margin-left: -1px !important;
                    }
                    .cart-pad-right span{
                        font-weight: 500;
                    }
                    .cart-pad-left span{
                        font-weight: 500;
                    }
                    .store-quan-input{
                        border: 1px solid #ccc;
                        border-radius: 0px !important;
                        box-shadow: inset 0 0px 0px rgba(0,0,0,0.075);
                        /*height: 25px;*/
                        width: 45%;
                    }
                    @media only screen
                    and (min-device-width : 768px)
                    and (max-device-width : 1024px)
                    and (orientation : landscape) {
                        <!--.entry-media img {
                            max-width:120%!important;
                            margin-right:10%!important;
                        }
                        .entry-main{
                            padding-left:10%!important;
                        }-->
                    }
                    .products-layout.list .product{
                        <!--border-radius: 4px;-->
                    }
                    .entry-media img {
                        <!--border-top-left-radius: 4px;
                        border-bottom-left-radius: 4px;-->
                    }
                    .RefineSearch:hover{
                        background-color:#f2eaea;
                    }
                    .btn-success{
                        color: #fff !important;
                        /*background-color: #0070D2!important;*/
                        border-color: #0070D2!important;
                        text-decoration: none !important;
                        padding-left: 5px;
                        padding-right: 5px;

                    }

                    input[type=checkbox] {
                           display: none;
                    }

                    .checkbox {
                        display: inline-block;
                        cursor: pointer;
                        font-size: 13px; margin-right:10px; line-height:15px;
                    }
                    input[type="checkbox"]:checked + label::before{
                        background-color: #2093DA;//#3BA9A4;
                        color:white;
                        border-color: #2093DA;//#3BA9A4;
                    }
                    .checkbox:before {
                        content: "";
                        display: inline-block;
                        width: 15px;
                        height: 15px;
                        vertical-align:middle;
                        text-align: center;
                        border:1px solid gray;
                        border-radius:2px;
                    }
                    input[type=checkbox]:checked + .checkbox:before {
                        content: "\2713";
                        text-shadow: 1px 1px 1px rgba(0, 0, 0, .2);
                        font-size: 15px;
                    }

                    .sidebar .side-section-header .side-section-title {
                        float : left;
                        color: #ff6000;
                        font-weight: bold;
                    }


                    .sidebar .side-section-header {
                        background: #FFFFFF !important;
                    }
                    .product .entry-media {
                        background: transparent !important;

                    }
                    .RefineSearch:hover {
                        background-color: #FFFFFF !important;
                    }
                    .products-wrapper {
                        position: relative;
                        top: -115px !important;
                    }

                    .sticktotop {
                        position:fixed;
                        top: 0;
                    }

                    .notsticky {
                        height: 42px;
                    }

                    .stickynav a {

                        color: #fff;

                        font-weight: 400;
                        background: #fff;
                        height: 32px;
                        z-index: 150;
                        margin-bottom: -30px;
                        box-shadow: 0 2px 3px rgba(0,0,0,.4);
                    }

                    .hover-table {
                        position: absolute;
                        background: #EEEEEE;
                        border: 4px solid #EEEEEE;
                        display: inline;
                        display:none;
                        z-index:1;
                        cursor: default;
                    }
                    .hover-table:after, .hover-table:before {
                        bottom: 100%;
                        left: 50%;
                        border: solid transparent;
                        content: " ";
                        height: 0;
                        width: 0;
                        position: absolute;
                        pointer-events: none;
                    }

                    .hover-table:after {
                        border-color: rgba(136, 183, 213, 0);
                        border-bottom-color: #EEEEEE;
                        border-width: 8px;
                        //margin-left: -8px;
                    }
                    .hover-table:before {
                        border-color: rgba(194, 225, 245, 0);
                        border-bottom-color: #EEEEEE;
                        border-width: 14px;
                        //margin-left: -14px;
                    }
                    .products-layout .mix-item{
                        padding: 15px !important;
                        float: left !important;
                        /*border: 1px solid #dfe0e1 !important;*/
                    }
                    .product {
                        position: relative !important;
                        border: none !important;
                        /* overflow: hidden; */
                    }
                    .img-center{
                        display: flex;
                        align-items: center;
                        justify-content: center;
                    }
                    .vmenu, .vmenu a{

                        font-weight: bold;
                    }
                    .active-cat{

                        color:#ff6000 !important;
                    }
                    .active-cat-font{
                        color:#ff6000 !important;
                    }

                    a{
                        cursor: pointer;
                    }
                    .bx-viewport{
                        height: auto !important;

                    }
                    .panel-default .panel-title> a{
                        color: #FFF !important;
                        /*font-family: "Salesforce Sans", Arial, sans-serif !important;*/
                    }
                    .panel-title-a{
                        color: #FFF !important;
                        /*font-family: "Salesforce Sans", Arial, sans-serif !important;  */
                    }
                    body
                    {
                        color: #706f6f !important;
                        font: 18px/1.54 "Bulo", "Helvetica Neue", "Helvetica", sans-serif !important;
                    }

                    .kuka-input
                    {
                        border-top: none;
                        border-left: none;
                        border-right: none;
                        border-bottom: thin solid #A4A4A4;
                        opacity: 0.7;
                        width: 50%;
                        font-size: 16pt;

                    }
                    .kuka-submit
                    {
                        border: none;
                        background-color: #FF5907;
                        color: #FFFFFF !important;
                        margin-left: auto;
                        margin-right: auto;
                        padding-top: 10px;
                        padding-bottom: 10px;
                    }
                    a:hover,
                    a:focus {
                        color: #ff6000 !important;
                    }

                    .modal-cancel
                    {
                        font-size:16pt;
                        float: right;
                        color:  #FF6000 !important;
                        padding-left: 7px;
                        padding-right:  7px;
                        margin-right:  0px;
                        border-style: none !important;
                        background-color: transparent !important;
                    }
                    .modal-cancel:hover
                    {

                        color:  #FF4000 !important;
                        font-weight: bold;
                    }
                    .product-item
                    {
                        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.09);
                        width: 100%;
                        height: 310px;


                    }
                    .product-description
                    {
                        color: #505050 !important;
                    }
                    .product-description > ul
                    {
                        list-style-type: circle !important;
                        margin-left: 40px !important;
                        margin-top: 10px !important;
                        margin-bottom: 10px !important;

                    }
                    .modal-header
                    {
                        background-color: #F7F7F7 !important;
                    }
                    .modal-footer
                    {
                        background-color: #FFF !important;
                    }
                    body
                    {
                        border-radius: 0px !important;
                    }
                    .slds .slds-button
                    {
                        border-radius: 0px !important;
                    }
                    .panel
                    {
                        border-radius: 0px !important;

                        background-color: transparent !important;
                    }
                    .panel-default
                    {
                        border-color: transparent;
                    }
                    .panel-body
                    {
                        background-color: #F6F6F6 !important;
                        border: 1px solid white;
                    }
                    .table-head
                    {
                        border: 1px solid white;
                        background-color: #ECEDEF;
                        font-weight: bold;
                        color: #676C70;
                    }

                    #cart-wrapper-container
                    {
                        border-top: 1px solid #F7F7F7;
                        background-image: url({!URLFOR($Resource.APTSDMP_CartBG)});

                        background-size:cover;
                        background-origin: border-box;
                        background-repeat: no-repeat;
                        background-position: 0% 0%;
                        width: 100%;
                    }
                    .checkout-wrapper
                    {
                        border-top: 1px solid #F7F7F7;
                        background-image: url({!URLFOR($Resource.APTSDMP_CartBG)});
                        background-color: #FAFAFA;
                        background-size:cover;
                        background-origin: border-box;
                        background-repeat: no-repeat;
                        background-position: 0% 0%;

                    margin-top: 15px;
                    }

                    .slds .slds-input
                    {
                        background-color: transparent !important;
                        border-top: none !important;
                        border-left: none !important;
                        border-right: none !important;
                    }
                    #sub-cart
                    {
                        background-color: #FFF;
                        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.15), 0 6px 20px 0 rgba(0, 0, 0, 0.14);
                    width: 350px;
                    }
                    .logo
                    {
                        width: 193px;
                        height: auto;
                    }

                    .catTable
                    {

                    }

                </style>

            </head>
            <body class="products-view" ng-controller="ProductController" id="mycontroller" >
                <div class="slds pageLoad" style="position: fixed;top: 0;left: 0;width: 100%;height: 100%;background: rgba(255, 255, 255, 0.75);box-shadow: 0 4px 23px 5px rgba(0, 0, 0, 0.2), 0 2px 6px rgba(0,0,0,0.15);z-index: 999999;">
                    <div class="slds-spinner--medium" style="margin-left: 50%;margin-top: 18%;">
                        <!--<img src="{!URLFOR($Resource.APTSMD_SalesforceLightningDesign,'assets/images/spinners/slds_spinner_brand.gif')}" alt="Loading..." /></div>-->
                        <img src="{!URLFOR($Resource.APTSMD_ApttusLabApp1, 'ApttusLabApp1/img/AjaxLoader.gif')}" alt="Loading..." width="40px" height="40px"/></div>
                    </div>
                    <!-- PAGE WRAPPER -->
                    <div id="page-wrapper" style="overflow-y:hidden">

                        <!--<div ng-include="envPath + '/partials/header.html'"></div>-->
                        <apex:include pageName="APTSMD_eComm_Header"/>
                        <div ng-if="mode=='main'">

                                                    <apex:include pageName="APTSMD_ECommerce_Cart"/>
                                                    <!--<div ng-include="envPath + '/partials/main.html'"></div>    -->
                                                    </div>
                                                    <div ng-if="mode=='prod'">
                                                        <c:APTSMD_eComm_ProductDetail />
                                                        <!--<div ng-include="envPath + '/partials/product.html'"></div>    -->
                                                        </div>

                                                        <div ng-if="mode=='cart'">
                                                             <c:APTSMD_eComm_Cart />
                                                            </div>

                                                            <div ng-if="mode=='checkout'">
                                                                <c:APTSMD_eComm_Checkout />
                                                                <!--<div ng-include="envPath + '/partials/checkout.html'"></div>    -->
                                                                </div>
                                                                <!--<div ng-if="mode=='thankyou'">
                                                                    <c:APTSMD_eComm_Thankyou />
                                                                    </div>-->
                                                                    <div ng-if="mode=='orderconfirm'">
                                                                        <c:APTSMD_eComm_Orderconfirmation />
                                                                        </div>
                                                                        <div ng-if="mode=='orderhistory'">
                                                                            <c:APTSMD_eComm_Orderhistory />
                                                                            </div>
                                                                            <!--<div ng-if="mode=='assetdetail'">
                                                                                <c:APTSMD_eComm_Assetdetails />
                                                                                </div>-->
                                                                                <!--<div ng-if="mode=='proposalConfirm'">
                                                                                    <c:APTSMD_eComm_ProposalConfirmation />
                                                                                    </div>-->
                                                                                    <!--<div ng-if="mode=='myDashboard'">
                                                                                        <c:APTSMD_eComm_MyDashboard />
                                                                                        </div> -->
                                                                                    <div ng-if="mode!='prod' && mode != 'cart'"><c:APTSMD_eComm_Subscribe /></div>
                                                                                       <c:APTSMD_eComm_Footer />

                                                                                       <!--<apex:include pageName=""/>-->

                                                                                        <!--<c:APTSMD_eComm_Modal />  -->

                                                                                        </div>
                                                                                        <!-- // PAGE WRAPPER -->

                                                                                            <apex:includeScript value="{!envPath}/js/bootstrap.min.js"/>
                                                                                                <apex:includeScript value="{!envPath}/js/package.min.js"/>
                                                                                                    <apex:includeScript value="{!envPath}/js/jquery.magnific-popup.min.js"/>
                                                                                                        <apex:includeScript value="{!envPath}/js/add-to-cart.js"/>
                                                                                                            <apex:includeScript value="{!envPath}/js/jquery-cookie.js"/>
                                                                                                                <apex:includeScript value="{!envPath}/js/scripts.js"/>
                                                                                                                    <apex:includeScript value="{!envPath}/js/jquery-ui.js"/>
                                                                                                                        <!--<apex:includeScript value="{!envPath}/js/jquery.nouislider.js"/>-->
                                                                                                                            <apex:includeScript value="{!envPath}/js/jquery.isotope.min.js"/>
                                                                                                                                <apex:includeScript value="{!envPath}/js/owl.carousel.js"/>
                                                                                                                                    <apex:includeScript value="{!envPath}/js/products.js"/>
                                                                                                                                        <!--<apex:includeScript value="{!URLFOR($Resource.APTSMD_IneoDesign, '/js/template.js')}" />-->

                                                                                                                                            <script type="text/javascript">
                                                                                                                                                var storeObject;

                                                                                                                                                window.onscroll = function() {myFunction()};

                            function myFunction() {
                                if ($(window).scrollTop() > 520) {
                                    $('.stickynav').addClass('sticktotop');
                                } else {
                                    $('.stickynav').removeClass('sticktotop');
                                }
                            }

                            function guestCheckout (street, city, state, country, code) {
                                this.street = street;
                                this.city = city;
                                this.state = state;
                                this.country = country;
                                this.code = code;
                            }
                            var guestUser ;
                            var envPath = "{!envPath}";

                            $(document).on('touchend','.view-cart',function(){
                                $("#shoppingCartElem").mouseout();
                            });

                            var spinnerOptions = {
                                lines: 13, // The number of lines to draw
                                length: 20, // The length of each line
                                width: 10, // The line thickness
                                radius: 30, // The radius of the inner circle
                                corners: 0.5, // Corner roundness (0..1)
                                rotate: 0, // The rotation offset
                                direction: 1, // 1: clockwise, -1: counterclockwise
                                color: '#000000', // #rgb or #rrggbb or array of colors
                                speed: 1, // Rounds per second
                                trail: 60, // Afterglow percentage
                                shadow: true, // Whether to render a shadow
                                hwaccel: false, // Whether to use hardware acceleration
                                className: 'spinner', // The CSS class to assign to the spinner
                                zIndex: 2e9, // The z-index (defaults to 2000000000)
                                top: '10', // Top position relative to parent in px
                                left: 'auto' // Left position relative to parent in px
                            };
                            var gridModeGlobal = 'list';
                            var defined = function(ref, strNames) {
                                var name;
                                if(ref === null || typeof ref === "undefined") {
                                    return false;
                                }

                                if(strNames !== null && typeof strNames !== "undefined") {
                                    var arrNames = strNames.split('.');
                                    while (name = arrNames.shift()) {
                                        if (ref[name] === null || typeof ref[name] === "undefined") return false;
                                        ref = ref[name];
                                    }
                                }
                                return true;
                            }


                            var myApp = angular.module('apttuslab', ["ui.bootstrap", "ngSanitize"]);

                            myApp.directive('newScope', function() {  return {  scope: true, priority: 450}; });

                            myApp.filter('timestampToDate', function () { return function (timestamp) { return new Date(timestamp).toDateString("yyyy-MM-dd"); }});

                            /* ***********************************************OrderConfirmation************************************************/

                            myApp.controller('OrderConfirmationController', ['$scope', '$rootScope', '$timeout',function ($scope, $rootScope, $timeout) {
                                console.log('########### OrderConfirmationController');
                                $scope.currency = '{!currencySym}';
                                $scope.conversion = {!dExchangeRate};
                                $scope.envPath = envPath;
                                $scope.gridMode = $rootScope.gridMode;
                                $scope.confirmOrder=[];

                                // $rootScope.spinner = new Spinner(spinnerOptions).spin($('#orderConfirm')[0]);

                                /* Pass CardId as empty string to get order history other wise current cart id. */

                                var card_Id= $scope.IsShowHistoryOrder ? "" : $scope.cart.CartId;

                                /* CurrentOrderInfo collections values change in GetOrderDetail, OrderHistory functions. */

                                var order_Id=$scope.IsShowHistoryOrder ?  $rootScope.CurrentOrderInfo.OrderId : $scope.cart.OrderId;

                                APTSMD_ApttusLabService.getOrderHistory(order_Id,card_Id,function(err,data){

                                    $rootScope.$apply(function(){
                                        if(defined(data.result) &&  defined(data.result,"Order_Number"))
                                            $scope.confirmOrder= jQuery.extend(true,{isOrderDetailAvailable:true}, data.result);
                                        else
                                            $scope.confirmOrder = jQuery.extend(true,{isOrderDetailAvailable:false}, data.result);
                                    });
                                    console.log(' ordeer confirm');
                                    console.log(data.result);
                                    if(!$scope.IsShowHistoryOrder)
                                        $scope.cart.OrderId=$scope.cart.CartId="";   //Clear CartIdand OrderId after submit order.After submit order user will redirect order confirmation page.

                                });
                                //$timeout(function () {$rootScope.spinner.stop();},5000);
                            }]);


                //WHITELISTING SECTION
                            myApp.config(["$sceDelegateProvider", function($sceDelegateProvider) {
                                $sceDelegateProvider.resourceUrlWhitelist([
                                    'self',
                                    "https://www.youtube.com/embed/**"
                                ]);
                            }]);
                            /* ***********************************************CheckoutController************************************************/
                            myApp.controller('CheckoutController', ['$scope', '$rootScope', '$timeout', function ($scope, $rootScope, $timeout) {
                                console.log('########### CheckoutController');
                                $scope.paymentType = 'Card';
                                 $scope.currency = '{!currencySym}';
                                $scope.conversion = {!dExchangeRate};
                                $scope.envPath = envPath;
                                $scope.gridMode = $rootScope.gridMode;
                                $scope.checkoutStep = 0;
                                $scope.addLocation = [{Name:'New Location',Apttus_Config2__Type__c:'New Shipping Address',Apttus_Config2__City__c:'',Apttus_Config2__AccountId__c:'not set',Apttus_Config2__Country__c:'',Apttus_Config2__PostalCode__c:'',Apttus_Config2__State__c:'',Apttus_Config2__Street__c:''}];
                                $scope.regInfo = {};
                                $scope.cybersource1 = '{!Cybersource}';
                                $scope.regInfo.isValidUser = '{!isValidUser}';
                                $scope.userType = '{!TEXT($User.UserType)}';
                                $scope.shipmentType = 'Single';
                                //adding code card verfication
                                $scope.FirstName;
                                $scope.LastName;
                                $scope.Street1;
                                $scope.City;
                                $scope.State;
                                $scope.Postalcode;
                                $scope.Country;
                                $scope.phoneNumber;
                                $scope.Email;
                                $scope.creditcardtype;
                                $scope.accountNumber;
                                $scope.expirationMonth;
                                $scope.expirationYear;
                                $scope.amount;
                                $scope.authreq = [];

                                $scope.saveNewAddress = function(){
                    console.log('Entered saveNewAddress ');
                    document.getElementById('saveAddressSpinner').style.display='inline-block';
                    APTSMD_ApttusLabService.saveAddress($scope.addLocation,function(err, data) {
                    console.log(data.result);
                    if(data.result){
                        $scope.getAllAddress();
                        document.getElementById('saveAddressSpinner').style.display='none';
                         $('.newAddress').hide();
                    }
                    });
                }

                $scope.getAllAddress = function(){
                     APTSMD_ApttusLabService.getAddressInfo(function(err, data) {
                                        console.log('--after addressInfo');
                                        console.log(data.result);
                                        $scope.regInfo.ShippingAddressOptions = [{id:-1,text:"--Select--"}];
                                         var newShip ={id:-2,text:"New Shipping Address"};
                                         $scope.regInfo.ShippingAddressOptions.push(newShip);
                                        if(defined(data.result)) {
                                            $scope.regInfo.addressInfo = data.result;
                                            if(defined($scope,"regInfo.addressInfo.addressWrapper.length") &&   $scope.regInfo.addressInfo.addressWrapper.length > 0) {
                                                $rootScope.$apply(function(){


                                                    $scope.regInfo.selectedShippingAddress=$scope.regInfo.ShippingAddressOptions[0];
                                                    for(var i=0; i<$scope.regInfo.addressInfo.addressWrapper.length; i++) {
                                                        var ba = jQuery.extend(true, {}, data.result.addressWrapper[i]);
                                                        //var bn = isNull(ba.Billing_Street) + ' ' + isNull(ba.Billing_City) + ' ' + isNull(ba.Billing_State) + ' ' + isNull(ba.Billing_Postal_Code) + ' ' + isNull(ba.Billing_Country);
                                                        //var obj = {id:i,text: bn};
                                                        //var subStringSaveCard = isNull(ba.SubString);


                                                        //var card = isNull(ba.CardNumber);
                                                        //var obj1 = {id:i,text: card};

                                                        //var savedcard = isNull(ba.SavedCard);
                                                        //var objsavedcard = {id:i,text: savedcard, substring: subStringSaveCard};

                                                        //if($.trim(bn) !="")
                                                            //$scope.regInfo.billingAddressOptions.push(obj);
                                                        var bn = isNull(ba.Shipping_Street) + ' ' + isNull(ba.Shipping_City) + ' ' + isNull(ba.Shipping_State) + ' ' + isNull(ba.Shipping_Postal_Code) + ' ' + isNull(ba.Shipping_Country);
                                                        var obj = {id:i,text: bn};
                                                        if($.trim(bn) !="")
                                                            $scope.regInfo.ShippingAddressOptions.push(obj);
                                                        //if($.trim(card) !="")
                                                            //$scope.regInfo.billingCardOptions.push(obj1);
                                                        //if($.trim(savedcard) !="")
                                                            //$scope.regInfo.savedCardOptions.push(objsavedcard);

                                                        //$timeout(function () {$rootScope.spinner.stop();}, 3000);
                                                    }



                                 });
                             }
                         }
                     });
                 }

                                //end
                                if($scope.userType.indexOf('Partner')>0){
                                    $scope.regInfo.isValidUser='true';
                                }
                                var checkoutMode = '{!$CurrentPage.parameters.checkout}';
                                console.log('>>> checkoutMode'+checkoutMode);
                                /*if(checkoutMode==1){
        var maxLeadTime = 0;
        console.log('inside checkoutmode>> ');

        //Get latest CART details
                APTSMD_ApttusLabService.getCartDetails(function(err, data) {
                    var cartDetails= data.result;
                    console.log('------cart details in checkout mode : ');
                    console.log(data.result);
                  if(defined(cartDetails,"cartWrapper")){
                    $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });
                     //Update Price on all line items
                     console.log('in checkout-------');
                     console.log($scope.cart.cartLineItems);
                    for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                        APTSMD_ApttusLabService.UpdatePriceOnCart($scope.cart.CartId, function(err, data) {
                          //console.log(data);
                       });
                    }

                    for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                        if(parseInt($scope.cart.cartLineItems[i].LeadTime) > maxLeadTime) {
                                maxLeadTime = parseInt($scope.cart.cartLineItems[i].LeadTime);
                                $scope.maxLeadTime = maxLeadTime;
                                //console.log('max lead time 2: ' + $scope.maxLeadTime);
                        }
                    }

                    $scope.regInfo.shipDate = new Date(new Date().getTime() + maxLeadTime*24*60*60*1000);
                  }

                });
            }  */
            console.log('$scope.regInfo.isValidUser : '+ $scope.regInfo.isValidUser);
            if($scope.regInfo.isValidUser == 'true'){
                $scope.regInfo.billingAddressOptions = [{id:-1,text:"--Select--"}];
                $scope.regInfo.billingCardOptions = [{id:-1,text:"--Select--"}];
                $scope.regInfo.savedCardOptions = [{id:-1,text:"New Payment Method"}];
            }

            if($scope.regInfo.isValidUser == 'true'){
                $scope.regInfo.selectedBillingAddress = $scope.regInfo.billingAddressOptions[0];
                $scope.regInfo.cardNumber = $scope.regInfo.billingCardOptions[0];
                $scope.regInfo.savedCard = $scope.regInfo.savedCardOptions[0];
            }

            $scope.regInfo.addressInfo = '';

            if($scope.regInfo.isValidUser == 'true'){
                $scope.regInfo.ShippingAddressOptions = [{id:-1,text:"--Select--"}];
                var newShip ={id:-2,text:"New Shipping Address"};
                $scope.regInfo.ShippingAddressOptions.push(newShip);
                console.log('>> Shipping adress ');
                console.log($scope.regInfo.ShippingAddressOptions);
            }

            $scope.regInfo.shipMethods=[{value:"OE5",text:"Ground"},{value:"OE3",text:"Second Day"},{value:"OE1",text:"Overnight"}];
            $scope.regInfo.selectedShipMethod=$scope.regInfo.shipMethods[0];
            $scope.regInfo.shipDate = new Date();
            $scope.regInfo.ccTypes=[{value:-1,text:"--Select--"}];
            $scope.regInfo.selectedCCType=$scope.regInfo.ccTypes[0];

            $scope.regInfo.POC_Account_NumberTypes=[{id:-1,Poc_Account_Name:"",Poc_ID:-1,text:"--Select--",neofundsflag:""}];
            $scope.regInfo.selectedPOC_Account_NumberType=$scope.regInfo.POC_Account_NumberTypes[0];

            if($scope.regInfo.isValidUser == 'true')
                $scope.regInfo.selectedShippingAddress=$scope.regInfo.ShippingAddressOptions[0];

            $scope.regInfo.guestShippingStreet = '';
            $scope.regInfo.guestShippingCity = '';
            $scope.regInfo.guestShippingState = '';
            $scope.regInfo.guestShippingCountry = '';
            $scope.regInfo.guestShippingCode = '';
            $scope.regInfo.cardNumber = '';
                                //$scope.regInfo.tax = null;
                                $scope.regInfo.tax = [{TaxAmt:10.00}];
                                $scope.regInfo.CCStatus="";
                                //$scope.regInfo.POCStatus="";
                                $scope.regInfo.orderId=$scope.cart.OrderId;
                                $scope.regInfo.cartId=$scope.cart.CartId;
                                $scope.regInfo.shipPhone="";
                                $scope.regInfo.shipTo="";
                                $scope.regInfo.orderPlacedNo="";
                                $scope.regInfo.shippingCharges=0.0;
                                $scope.regInfo.shippingInstruction="";
                                $scope.regInfo.SubTotal=0.0;
                                $scope.regInfo.Promotion=0.0;
                                $scope.regInfo.PromoCode = '';
                                $scope.IsCardValidate=false;
                                $scope.cardInfo={};
                                $scope.ccDetails={};
                                $scope.CardValidatePattern="/^\d+$/";
                                $scope.lstProducts = [];
                                $scope.regInfo.expirationDateYears=[];
                                $scope.regInfo.expirationDateMonths= [{id:-1,text:'MONTH'},{id:01,text:'Jan(01)'},{id:02,text:'Feb(02)'},
                                {id:03,text:'Mar(03)'},{id:04,text:'Apr(04)'},{id:05,text:'May(05)'},
                                {id:06,text:'June(06)'},{id:07,text:'July(07)'},{id:08,text:'Aug(08)'},
                                {id:09,text:'Sep(09)'},{id:10,text:'Oct(10)'},{id:11,text:'Nov(11)'},
                                {id:12,text:'Dec(12)'}
                                ];
                                var prodcutTotal =$scope.getProductTotal();
                                $scope.regInfo.SubTotal=$scope.getProductTotal();

                                var isOrderSubmitted = false;
                                APTSMD_ApttusLabService.IsOrderSubmitted($scope.cart.OrderId,function(err, data) {

                                    isOrderSubmitted = data.result;
                                    if(defined(data,"result")){
                                        isOrderSubmitted = data.result;
                                        if(isOrderSubmitted)
                                        {
                                            $scope.cart.cartLineItems = [];
                                            $scope.cart.OrderId=$scope.cart.CartId="";

                                        }
                                    }

                                });

                                $scope.regInfo.expirationDateMonth=$scope.regInfo.expirationDateMonths[0];
                                var index=0;
                                for(i=15; i<25;i++) {
                                    if(i==15)
                                        $scope.regInfo.expirationDateYears.push({id:-1,text:"YEAR"})
                                    $scope.regInfo.expirationDateYears.push({id:i,text:new Date().getFullYear()+index});
                                    index++;
                                }
                                $scope.regInfo.expirationDateYear=$scope.regInfo.expirationDateYears[0];

                                APTSMD_ApttusLabService.cardTypes(function(err, data){
                                    if(defined(data,"result")){

                                        $rootScope.$apply(function(){
                                            angular.forEach(data.result,function(value, key) {
                                                $scope.regInfo.ccTypes.push({value:key,text:value});
                                            });
                                        });
                                    }
                                });



                                $scope.updateShippingCharges = function(shipMethod){
                                    //"OE5",text:"Ground"},{value:"OE3",text:"Second Day"},{value:"OE1",text:"Overnight"
                                    //console.log('shipping method : ');
                                    //console.log($scope.regInfo.selectedShipMethod);
                                    var shipType = $scope.regInfo.selectedShipMethod.value;
                                    $scope.groundTax = '{!$Setup.Apttus_Presales_eCommerce_Settings__c.GroundShippingPer__c}';
                                    $scope.overnightTax = '{!$Setup.Apttus_Presales_eCommerce_Settings__c.OvernightTaxPer__c}';
                                    $scope.secondDayTax = '{!$Setup.Apttus_Presales_eCommerce_Settings__c.SecondDayPer__c}';
                                    if($scope.groundTax ==''){
                                        $scope.groundTax = 0.5;
                                    }
                                    if($scope.overnightTax ==''){
                                        $scope.overnightTax = 1;
                                    }
                                    if($scope.secondDayTax == ''){
                                        $scope.secondDayTax = 1.5;
                                    }
                                    if(shipType =='OE5'){
                                        $scope.regInfo.shippingCharges = $scope.regInfo.SubTotal * ($scope.groundTax/100);
                                    }else if(shipType =='OE3'){
                                        $scope.regInfo.shippingCharges = $scope.regInfo.SubTotal * ($scope.overnightTax/100);
                                    }else if(shipType =='OE1'){
                                        $scope.regInfo.shippingCharges = $scope.regInfo.SubTotal * ($scope.secondDayTax/100);
                                    }
                                    //console.log('>> in update shipping : '+ $scope.regInfo.shippingCharges);
                                    //console.log('>> Subtotal : '+$scope.regInfo.SubTotal);

                                };
                                $scope.updateShippingCharges('OE5'); //to get default shipping charges



                                $scope.changeCCType = function(CCType) {

                                    //console.log(CCType);

                                    if(CCType.text === "NEOFUNDS")
                                    {
                                        $('#cardName').hide();
                                        $('#CardNumber').hide();
                                        $('#savedcard').hide();
                                        $('#ExpiryDate').hide();
                                        $('#CardCVV').hide();
                                        $('#POCAccount').show();
                                        //$('#lblPOCMessage').show();
                                        $('#lblCCMessage').hide();

                                    }
                                    else
                                    {
                                        $('#POCAccount').hide();
                                        //$('#lblPOCMessage').hide();
                                        $('#lblCCMessage').hide();
                                        $('#cardName').show();
                                        $('#CardNumber').show();
                                        $('#SavedCard').show();
                                        $('#ExpiryDate').show();
                                        $('#CardCVV').show();


                                    }
                                }

                                for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                                    APTSMD_ApttusLabService.UpdatePriceOnCart($scope.cart.CartId, function(err, data) {
                                        //console.log(data);
                                    });
                                }


                                for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                                    var cartItem = $scope.cart.cartLineItems[i];
                                    var obj = jQuery.extend(true, {}, $scope.rawCart.prodDetailForTax);
                                    var prod = _.findWhere($scope.fullProds, {ProductId: cartItem.ProductId});
                                    if(defined(prod)) {
                                        obj.ProductCode = prod.ProductCode;
                                        obj.Quantity = cartItem.iQuantity;
                                        obj.UnitPrice = $scope.getProductPrice(prod.ProductId, 1);
                                        $scope.lstProducts.push(obj);
                                    }
                                }
                                if($scope.regInfo.isValidUser == 'true') {
                                    var obj = $('.panel-heading')
                                    spinnerOptions.Radius=0;   // Change Spinner Size;
                                    //$rootScope.spinner = new Spinner(spinnerOptions.Radius).spin(false).spin(obj[0]);
                                    $('.pageLoad').show();


                                    APTSMD_ApttusLabService.getAddressInfo(function(err, data) {
                                        console.log('--after addressInfo');
                                        console.log(data.result);

                                        if(defined(data.result)) {
                                            $scope.regInfo.addressInfo = data.result;

                                                $rootScope.$apply(function(){
                                                 if(defined($scope,"regInfo.addressInfo.addressWrapper.length") &&   $scope.regInfo.addressInfo.addressWrapper.length > 0) {
                                                    for(var i=0; i<$scope.regInfo.addressInfo.addressWrapper.length; i++) {
                                                        var ba = jQuery.extend(true, {}, data.result.addressWrapper[i]);
                                                        var bn = isNull(ba.Billing_Street) + ' ' + isNull(ba.Billing_City) + ' ' + isNull(ba.Billing_State) + ' ' + isNull(ba.Billing_Postal_Code) + ' ' + isNull(ba.Billing_Country);
                                                        var obj = {id:i,text: bn};

                                                        var card = isNull(ba.CardNumber);
                                                        var obj1 = {id:i,text: card};

                                                        if($.trim(bn) !="")
                                                            $scope.regInfo.billingAddressOptions.push(obj);
                                                        bn = isNull(ba.Shipping_Street) + ' ' + isNull(ba.Shipping_City) + ' ' + isNull(ba.Shipping_State) + ' ' + isNull(ba.Shipping_Postal_Code) + ' ' + isNull(ba.Shipping_Country);
                                                        var obj = {id:i,text: bn};
                                                        if($.trim(bn) !="")
                                                            $scope.regInfo.ShippingAddressOptions.push(obj);
                                                        if($.trim(card) !="")
                                                            $scope.regInfo.billingCardOptions.push(obj1);


                                                    }

                                                   }
                                                if(defined($scope,"regInfo.addressInfo.cardWrapper.length") &&   $scope.regInfo.addressInfo.cardWrapper.length > 0) {
                                                      for(var i=0; i<$scope.regInfo.addressInfo.cardWrapper.length; i++) {
                                                        var ba = jQuery.extend(true, {}, data.result.cardWrapper[i]);

                                                        var subStringSaveCard = isNull(ba.subString);
                                                        var savedcard = isNull(ba.savedCard);
                                                        var objsavedcard = {id:i,text: savedcard, substring: subStringSaveCard};
                                                         if($.trim(savedcard) !="")
                                                            $scope.regInfo.savedCardOptions.push(objsavedcard);
                                                      }
                                                }

                                                   $timeout(function () {
                                                       //$rootScope.spinner.stop();
                                                       $('.pageLoad').hide();
                                                   }, 3000);
                                            });


                         //added by manish
                         //  $timeout(function () {$rootScope.spinner.stop();}, 3000);

                         /*if(defined($scope,"regInfo.addressInfo.addressWrapper.length") && $scope.regInfo.addressInfo.addressWrapper.length > 0) {
              if(defined($scope.regInfo.addressInfo.addressWrapper[0],"Billing_Postal_Code")) {
                var zip = $scope.regInfo.addressInfo.addressWrapper[0].Billing_Postal_Code;
                var amt = $scope.getProductTotal();
                APTSMD_ApttusLabService.getTax(zip, amt, $scope.lstProducts, function(err, data) {
                  if(defined(data,"result"))
                    $rootScope.$apply(function(){
                      $scope.regInfo.tax = data.result == null ? 0 : data.result;

                    });
                });
              }
          }*/

  }
  $scope.cloneCartItem = function(cartItem) {
   var found=-1;
   console.log('--clone method called--');
   for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
       if($scope.cart.cartLineItems[i].lineItemId == cartItem.lineItemId) {
           found=i;
           break;
       }
   }
   if(found > -1) {
       var prodId = $scope.cart.cartLineItems[found].ProductId;
       var quantity = $scope.cart.cartLineItems[found].iQuantity;
       APTSMD_ApttusLabService.cloneCartItem($scope.cart.cartLineItems[found].lineItemId, $scope.cart.CartId,prodId,quantity, function(err, data) {
           console.log('---item cloned---');
           console.log(data.result);
                            //  $scope.cart.cartLineItems.push(data.result);
                            //  var cartDetails= data.result;
                            //  if(defined(data.result)){
                            //      if(defined(cartDetails,"cartWrapper")){
                            //          var prodcutTotal =$scope.getProductTotal();
                            //          console.log(' SubTotal : ');
                            //          console.log(prodcutTotal);
                            //          $scope.regInfo.SubTotal=prodcutTotal;
                            $rootScope.$apply(function(){
                               $scope.cart.cartLineItems.push(data.result);
                                        //  $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems;$scope.regInfo.SubTotal=$scope.getProductTotal();
                                        //                           $scope.cart.cartLineItems.sort($scope.sortCartLineItems);
                                        //                           $scope.setDefaultCartShipping();
                                    });

                            //      }
                            //  }
                        });

   }

}
$scope.sortCartLineItems = function(item1,item2){
   var name1 = $scope.getProductName(item1.ProductId);
   var name2 = $scope.getProductName(item2.ProductId);
   return ((name1 == name2) ? 0 : ((name1 > name2) ? 1 : -1 ));

}
$scope.cartShippingAddressChnage = function(shippingAddress){
   console.log('--shipping changed--');
   console.log($scope.regInfo.addressInfo.addressWrapper[shippingAddress.id]);


}
$scope.setDefaultCartShipping = function(){
   angular.forEach($scope.cart.cartLineItems,function(item){
       item.shippingDetails = {id:-1,text:"--Select--"};
   });
}
$scope.setDefaultCartShipping();
$scope.removeClonedCartItem = function(cartItem) {
   var found=-1;
   for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
       if($scope.cart.cartLineItems[i].lineItemId == cartItem.lineItemId) {
           found=i;
           break;
       }
   }
   if(found > -1) {
       APTSMD_ApttusLabService.removeCartItem($scope.cart.cartLineItems[found].lineItemId, $scope.cart.CartId, function(err, data) {
       });
       $scope.cart.cartLineItems.splice(found, 1);
   }
}
});
}

$scope.ShippingDateChnage= function(curDate) {
    var selectedDate = new Date($('#txtShipDate').val());
    var today = new Date();
    var earliestDate = new Date();
    earliestDate.setHours(0);
    earliestDate.setMinutes(0);
    earliestDate.setSeconds(0);
    selectedDate.setDate(selectedDate.getDate() + 1);
    earliestDate.setDate(today.getDate() + $scope.maxLeadTime);
    if(earliestDate > selectedDate ){
        var yyyy = earliestDate.getFullYear().toString();
        var mm = (earliestDate.getMonth()+1).toString();
        var dd  = earliestDate.getDate().toString();
        var displayStr = (mm[1]?mm:"0"+mm[0]) + '/' + (dd[1]?dd:"0"+dd[0]) + '/' + yyyy;
        alert('Shipping not available until after : ' + displayStr);
                                        //console.log(earliestDate);
                                        //console.log(selectedDate);
                                    }
                                };

                                $scope.GuestShippingAndTax= function() {
                                    var zip = $scope.regInfo.guestShippingCode;
                                    var city = $scope.regInfo.guestShippingCity;
                                    var street = $scope.regInfo.guestShippingStreet;
                                    var country = $scope.regInfo.guestShippingCountry;
                                    var state = $scope.regInfo.guestShippingState;
                                    var amt = $scope.getProductTotal();
                                    //get cart size
                                    var cartSize = 0;
                                    for(i=0; i<$scope.cart.cartLineItems.length; i++){
                                        cartSize += $scope.cart.cartLineItems[i].iQuantity;
                                    }
                                    //console.log('cart Size: ' + cartSize);
                                    APTSMD_ApttusLabService.ShippingChargesFedex(amt,cartSize,street,city,state,country,zip,$scope.regInfo.selectedShipMethod.text,function(err, data){
                                        //console.log('shippingcharges fedex');
                                        console.log(data);
                                        //console.log('check line items');
                                        //console.log($scope.cart);
                                        //get total rates for all items
                                        if(data.result.reply.HighestSeverity == 'SUCCESS'){
                                            var rrd = data.result.reply.RateReplyDetails;
                                            for(i=0; i< rrd.length; i++){
                                                var rsd = rrd[i].RatedShipmentDetails
                                                for(j=0; j< rsd.length; j++){
                                                    //get total surcharge, total charge, and total base charge
                                                    $scope.regInfo.shippingCharges+= rsd[j].ShipmentRateDetail.TotalNetCharge.Amount;
                                                }
                                            }
                                            //console.log('total shipping charges');
                                            //console.log($scope.regInfo.shippingCharges);
                                        }else{
                                            $scope.regInfo.shippingCharges = 0.0;
                                            //console.log('error occured while requesting rates');
                                            if(data.result.reply.HighestSeverity != null && data.result.reply.HighestSeverity != 'undefined'){
                                                var errorMsg = data.result.reply.Notifications[0].Message;
                                                //alert(errorMsg);
                                            }
                                        }

                                    });

                                    APTSMD_ApttusLabService.getTax(zip, amt, $scope.lstProducts,city, street, country,state,$scope.regInfo.selectedShipMethod.text, function(err, data) {
                                        if(defined(data,"result")){
                                            if(defined(data.result,"success") && data.result.success){
                                                $rootScope.$apply(function(){
                                                    //console.log("TAX" +data.result);
                                                    $scope.regInfo.tax = data.result;
                                                    $scope.regInfo.tax.TaxAmt= defined($scope.regInfo.tax,"TaxAmt") ? $scope.regInfo.tax.TaxAmt : 0.0;
                                                    var prodcutTotal= amt + $scope.regInfo.tax.TaxAmt;

                                                });
                                            }
                                            else{
                                                if(!defined($scope.regInfo.tax,"TaxAmt"))
                                                    $scope.regInfo.tax.TaxAmt=0.0;
                                                jQuery.extend(true, {TaxAmt:0.0}, $scope.rawCart.authRequest);
                                            }
                                        }
                                    });


                                }

                                $scope.changeSavedCard = function(addr){
                                    if(addr.id > -1){
                                        var savedCardPage = addr.substring;
                                        var res = savedCardPage.split("#");
                                        $scope.regInfo.selectedCCType = $scope.regInfo.ccTypes.filter(function(obj){ return (obj.text==String(res[0])); })[0];
                                        $scope.regInfo.nameOnCard = res[1];
                                        $scope.regInfo.cardNumber = res[2];
                                        $scope.regInfo.expirationDateMonth = $scope.regInfo.expirationDateMonths.filter(function(obj){ return (obj.text==res[3]); })[0];
                                        $scope.regInfo.expirationDateYear = $scope.regInfo.expirationDateYears.filter(function(obj){ return (obj.text==res[4]); })[0];
                                    }else{
                                        $scope.regInfo.selectedCCType = $scope.regInfo.ccTypes.filter(function(obj){ return (obj.value== -1); })[0];
                                        $scope.regInfo.nameOnCard = '';
                                        $scope.regInfo.cardNumber = '';
                                        $scope.regInfo.expirationDateMonth = $scope.regInfo.expirationDateMonths.filter(function(obj){ return (obj.id== -1); })[0];
                                        $scope.regInfo.expirationDateYear = $scope.regInfo.expirationDateYears.filter(function(obj){ return (obj.id== -1); })[0];
                                    }

                                };

                                $scope.ShippingAddressChnage= function(addr) {
                                    var maxLeadTime = 0;
                                    if($scope.regInfo.selectedShippingAddress.id ==-2 )
                                    {
                                        $('.newAddress').show();
                                        return
                                        var obj = $('#checkout-collapse1')
                                        spinnerOptions.Radius=0;   // Change Spinner Size;
                                        $rootScope.spinner = new Spinner(spinnerOptions.Radius).spin(false).spin(obj[0]);
                                    }
                                    else{
                                        $('.newAddress').hide();
                                    }


                                    if(defined($scope,"regInfo.selectedBillingAddress")) {
                                        if(defined($scope,"regInfo.addressInfo.addressWrapper.length") && $scope.regInfo.addressInfo.addressWrapper.length > 0) {
                                            if(defined($scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id],"Shipping_Postal_Code")) {
                                                var zip = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_Postal_Code;
                                                var city = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_City;
                                                var street = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_Street;
                                                var country = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_Country;
                                                var state = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_State;
                                                var amt = $scope.getProductTotal();

                                                //replacing original shipping method with fedex api calls
                                                /*APTSMD_ApttusLabService.ShippingCharges(amt,$scope.regInfo.selectedShipMethod.text,function(err, data){
                    //console.log('shippingcharges');
                    //console.log(data);
                //console.log("shippingCarges" +data.result);
                 $scope.regInfo.shippingCharges= defined(data.result) ? data.result : 0.0;
             });*/

             if(amt>=200 && $scope.regInfo.selectedShipMethod.text=='Ground'){
                             //$scope.regInfo.shippingCharges= 0.0; //commented by mayur for custom shipping charges
                         }else{
                             //get cart size
                             var cartSize = 0;
                             for(i=0; i<$scope.cart.cartLineItems.length; i++){
                               cartSize += $scope.cart.cartLineItems[i].iQuantity;
                           }
                             //console.log('cart Size: ' + cartSize);
                             APTSMD_ApttusLabService.ShippingChargesFedex(amt,cartSize,street,city,state,country,zip,$scope.regInfo.selectedShipMethod.text,function(err, data){
                                 //console.log('shippingcharges fedex');
                                 console.log(data);
                                 //console.log('check line items');
                                 //console.log($scope.cart);
                                 //get total rates for all items
                                 if(data.result.reply.HighestSeverity == 'SUCCESS'){
                                   var rrd = data.result.reply.RateReplyDetails;
                                   for(i=0; i< rrd.length; i++){
                                       var rsd = rrd[i].RatedShipmentDetails
                                       for(j=0; j< rsd.length; j++){
                                             //get total surcharge, total charge, and total base charge
                                             //commented by mayur for custom shipping charges
                                             //$scope.regInfo.shippingCharges+= rsd[j].ShipmentRateDetail.TotalNetCharge.Amount;
                                         }
                                     }
                                     //console.log('total shipping charges');
                                     //console.log($scope.regInfo.shippingCharges);
                                 }else{
                                   $scope.regInfo.shippingCharges = 0.0;
                                     //console.log('error occured while requesting rates');
                                     if(data.result.reply.HighestSeverity != null && data.result.reply.HighestSeverity != 'undefined'){
                                       var errorMsg = data.result.reply.Notifications[0].Message;
                                       alert(errorMsg);
                                   }
                               }

                           });
                         }

                         APTSMD_ApttusLabService.getTax(zip, amt, $scope.lstProducts,city, street, country,state,$scope.regInfo.selectedShipMethod.text, function(err, data) {
                           if(defined(data,"result")){
                               if(defined(data.result,"success") && data.result.success){
                                   $rootScope.$apply(function(){
                                         //console.log("TAX" +data.result);
                                         $scope.regInfo.tax = data.result;
                                         $scope.regInfo.tax.TaxAmt= defined($scope.regInfo.tax,"TaxAmt") ? $scope.regInfo.tax.TaxAmt : 0.0;
                                         var prodcutTotal= amt + $scope.regInfo.tax.TaxAmt;

                                     });
                               }
                               else{
                                   if(!defined($scope.regInfo.tax,"TaxAmt"))
                                       $scope.regInfo.tax.TaxAmt=0.0;
                                   jQuery.extend(true, {TaxAmt:0.0}, $scope.rawCart.authRequest);
                               }
                           }
                       });
                     }
                 }
             }
             APTSMD_ApttusLabService.shipDetails(function(err, data) {
               if(defined(data,"result")){
                   $rootScope.$apply(function(){
                       var objWrapper=data.result;
                       $scope.regInfo.shipTo =defined(objWrapper,"FullName") ? objWrapper.FullName : "";
                       $scope.regInfo.shipPhone=defined(objWrapper,"Phone") ? objWrapper.Phone: "";
                       $rootScope.spinner.stop();
                   });
               }});

             //Get latest CART details
             APTSMD_ApttusLabService.getCartDetails(function(err, data) {
               var cartDetails= data.result;
               if(defined(cartDetails,"cartWrapper")){
                   $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });
                     //Update Price on all line items
                     for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                       APTSMD_ApttusLabService.UpdatePriceOnCart($scope.cart.CartId, function(err, data) {
                             //console.log(data);
                         });
                   }

                   for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                       if(parseInt($scope.cart.cartLineItems[i].LeadTime) > maxLeadTime) {
                           maxLeadTime = parseInt($scope.cart.cartLineItems[i].LeadTime);
                           $scope.maxLeadTime = maxLeadTime;
                             //console.log('max lead time 2: ' + $scope.maxLeadTime);
                         }
                     }

                     $scope.regInfo.shipDate = new Date(new Date().getTime() + maxLeadTime*24*60*60*1000);
                 }

             });

             var billToId = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedBillingAddress.id].accountId;
             $scope.pocLength =0;

             $timeout(function () {$rootScope.spinner.stop();}, 3000);
         };


         $scope.checkout = function() {
            alert('card validation');
            var prodcutTotal=$scope.getProductTotal();
            var ar = jQuery.extend(true, {}, $scope.rawCart.authRequest);
            if(defined($scope.regInfo.nameOnCard)) {
                var names = $scope.regInfo.nameOnCard.split(' ');
                if(names.length > 0) {
                    ar.firstName = names[0];
                    if(names.length > 1)
                        ar.lastName = names[1];
                }
            }

                                        //var prodcutTotal=$scope.getProductTotal();
                                        var amt = prodcutTotal+ $scope.regInfo.tax.TaxAmt;
                                        APTSMD_ApttusLabService.ShippingCharges(prodcutTotal,$scope.regInfo.selectedShipMethod.text,function(err, data){
                                            $scope.regInfo.shippingCharges=data.result;
                                        });

                                        if(defined($scope,"regInfo.selectedBillingAddress")) {
                                            if(defined($scope,"regInfo.addressInfo.addressWrapper.length") && $scope.regInfo.addressInfo.addressWrapper.length > 0) {

                                                if(defined($scope,"regInfo.selectedBillingAddress.id")) {

                                                    //  var prodcutTotal =$scope.getProductTotal();
                                                    var i = $scope.regInfo.selectedBillingAddress.id;
                                                    var billingAddr = $scope.regInfo.addressInfo.addressWrapper[i];
                                                    ar.street1 = billingAddr.Billing_Street;
                                                    ar.city = billingAddr.Billing_City;
                                                    ar.state = billingAddr.Billing_State;
                                                    ar.postalCode = billingAddr.Billing_Postal_Code;
                                                    ar.country = billingAddr.Billing_Country;
                                                    ar.phoneNumber = $scope.regInfo.addressInfo.Phone;
                                                    ar.email = $scope.regInfo.addressInfo.Email;
                                                    ar.cardtype ='001'    //$scope.regInfo.selectedCCType.text ;
                                                    ar.creditCardType=$scope.regInfo.selectedCCType.text;
                                                    ar.amount = prodcutTotal +$scope.regInfo.tax.TaxAmt+$scope.regInfo.shippingCharges;
                                                    ar.accountNumber = $scope.regInfo.cardNumber;
                                                    ar.expirationMonth = $scope.regInfo.expirationDateMonth.id;
                                                    ar.expirationYear = $scope.regInfo.expirationDateYear.id;
                                                    $scope.ccDetails=ar;
                                                    //console.log("--sending data in checkout-->>"+JSON.stringify(ar));

                                                    //$rootScope.spinner = new Spinner({Radius:0}).spin(false).spin($("#checkout-collapse2")[0]);
                                                    // $rootScope.spinner = new Spinner({Radius:0}).spin(false).spin($("#checkout-collapse3")[0]);

                                                    APTSMD_ApttusLabService.authorizeCreditCard(ar, function(err, data){
                                                        $rootScope.$apply(function(){
                                                            $scope.regInfo.CCStatus ="";
                                                            $scope.cardInfo =data.result;
                                                            if(defined(data.result)){
                                                                if(defined(data.result,"success")){
                                                                    if(!data.result.success)
                                                                    {
                                                                        $scope.regInfo.CCStatus=data.result.message;   //Hide message when authrized card.
                                                                        $('#lblCCMessage').show();
                                                                    }
                                                                    $scope.IsCardValidate=data.result.success;

                                                                    // console.log('---->>> checkout response from server-->>'+data.result.success);
                                                                    //  $scope.regInfo.SubTotal=prodcutTotal;
                                                                    //  $timeout(function () { $rootScope.spinner.stop();}, 1000);

                                                                }
                                                            }
                                                            //  $timeout(function () {$rootScope.spinner.stop().spin(false);}, 3000);
                                                        });
                                                    });
                                                }
                                            }
                                        }

                                    };

                                    $scope.SubmitOrder = function()
                                    {
                                        var obj = $('#checkout-collapse3')
                                    spinnerOptions.Radius=0;   // Change Spinner Size;
                                    //$rootScope.spinner = new Spinner(spinnerOptions.Radius).spin(false).spin(obj[0]);


                                    var orderinfo={
                                        BillTo_Account_Id:"",ShipTo_Account_Id:"",dOrderAmount:0.0,dTaxAmount:0.0,accLocation_Id:'',
                                        dShippingCharges:0.0,Shipping_Method:"",FullName:"",ShipTo_Phone:"",ShipTo_Phone:"",Shipping_Instructions:"",
                                        Credit_Card_Number:"",  ShipTo_Address:"",Order_Number:"",Shipping_Instructions:"",
                                        Shipping_Method_Value:"",Payment_Type:"",PocAcctNumber:"",Shipto_Address1:"",Shipto_City:"",Shipto_State:"",Shipto_Zip:"",
                                        Order_ID:"",Card_Type:"",Credit_Card_Number:"",ccDetails:{},
                                        cyberSourceResponse:{}, Promotion:"",cartId:"",poNumber:"",multipleShipment:false
                                    };


                                    if($scope.shipmentType=='Single'){ //for single Shipment type
                                        //Get latest CART details
                                        APTSMD_ApttusLabService.getCartDetails(function(err, data) {
                                            var cartDetails= data.result;
                                            if(defined(cartDetails,"cartWrapper")){
                                                $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems;
                                                   orderinfo.dOrderAmount= $scope.getProductTotal();  });
                                                //Update Price on all line items
                                                for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                                                    APTSMD_ApttusLabService.UpdatePriceOnCart($scope.cart.CartId, function(err, data) {
                                                        //console.log(data);
                                                    });
                                                }
                                            }

                                        });
                                    }else{
                                        //for multiple shipment update cart line items
                                        orderinfo.multipleShipment=true;
                                        //update shipping address
                                        angular.forEach($scope.cart.cartLineItems,function(item){
                                            item.shippingDetails = $scope.regInfo.addressInfo.addressWrapper[item.shippingDetails.id];
                                        });
                                        console.log('--updated cart line items--');
                                        console.log($scope.cart.cartLineItems);
                                        //update the line items with selected shipping addresses
                                        APTSMD_ApttusLabService.updateCartLineItems(JSON.stringify($scope.cart), function(err, data){
                                            var cartDetails= data.result;
                                            console.log(' Afterupdate cart called');
                                            console.log(cartDetails)
                                            if(defined(data.result)){
                                                if(defined(cartDetails,"cartWrapper")){
                                                    // ci.lineItemId=data.result.cartLineItems[data.result.cartLineItems.length-1].lineItemId;

                                                    $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems; orderinfo.dOrderAmount= $scope.getProductTotal();   });

                                                }
                                            }
                                        });

                                    }

                                    var billingAddress;
                                    var shippingAddress;
                                    if($scope.regInfo.isValidUser == 'true') {
                                        billingAddress = $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedBillingAddress.id];
                                        orderinfo.BillTo_Account_Id=billingAddress.accountId;
                                        orderinfo.accLocation_Id=billingAddress.Id;

                                        orderinfo.Shipto_Address1=$scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_Street;
                                        orderinfo.Shipto_City=$scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_City;
                                        orderinfo.Shipto_State=$scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_State;
                                        orderinfo.Shipto_Zip=$scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id].Shipping_Postal_Code;
                                        console.log('### This is the orderInfo---');
                                        console.log(orderinfo);

                                        if($scope.shipmentType=='Single'){ //for single Shipment type
                                            shippingAddress= $scope.regInfo.addressInfo.addressWrapper[$scope.regInfo.selectedShippingAddress.id];
                                            orderinfo.ShipTo_Account_Id=shippingAddress.accountId;
                                            orderinfo.accLocation_Id=shippingAddress.Id;
                                        }

                                    }else{
                                        orderinfo.BillTo_Account_Id='';
                                        orderinfo.ShipTo_Account_Id = '';

                                        guestUser = new guestCheckout($scope.regInfo.shipTo,$scope.regInfo.guestShippingStreet,$scope.regInfo.guestShippingCity,$scope.regInfo.guestShippingState,$scope.regInfo.guestShippingCountry,$scope.regInfo.guestShippingCode);


                                        /*user.name = $scope.regInfo.shipTo;
                        user.shippingStreet = $scope.regInfo.guestShippingStreet;
                        user.shippingStreet = $scope.regInfo.guestShippingCity;
                        user.shippingStreet = $scope.regInfo.guestShippingState;
                        user.shippingStreet = $scope.regInfo.guestShippingCountry;
                        user.shippingStreet = $scope.regInfo.guestShippingCode;

                        $.cookie('guest', user);*/

                 //orderinfo.ShipTo_Account_Id = APTSMD_ApttusLabService.getShipToAccount($scope.regInfo.guestShippingStreet, $scope.regInfo.guestShippingCity, $scope.regInfo.guestShippingState, $scope.regInfo.guestShippingCountry, $scope.regInfo.guestShippingCode);
             }

             //  cyberSourceResponse:{ TaxAmt:0.0,success:false,message:"",error:false,authorizationCode:""}
             orderinfo.Promotion = $scope.regInfo.Promotion;

             //orderInfo.cartId = $scope.regInfo.cartId;
             orderinfo.dOrderAmount= $scope.getProductTotal(); //+ $scope.regInfo.tax.TaxAmt+$scope.regInfo.shippingCharges;
             orderinfo.dTaxAmount=$scope.regInfo.tax.TaxAmt;
             orderinfo.FullName=$scope.regInfo.nameOnCard;
             orderinfo.GuestShipTo_Street=$scope.regInfo.guestShippingStreet;
             orderinfo.GuestShipTo_City=$scope.regInfo.guestShippingCity;
             orderinfo.GuestShipTo_State=$scope.regInfo.guestShippingState;
             orderinfo.GuestShipTo_Country=$scope.regInfo.guestShippingCountry;
             orderinfo.GuestShipTo_Code=$scope.regInfo.guestShippingCode;
             orderinfo.Order_Number="";
             orderinfo.dShippingCharges= $scope.regInfo.shippingCharges;
             orderinfo.Credit_Card_Number=$scope.regInfo.cardNumber;
             orderinfo.Order_ID=$scope.cart.OrderId;
             orderinfo.Card_Type=$scope.regInfo.selectedCCType.text;
             orderinfo.Credit_Card_Number=$scope.regInfo.cardNumber;
             orderinfo.ccDetails=$scope.ccDetails;
             orderinfo.cyberSourceResponse=$scope.cardInfo;
             orderinfo.Cart_Id=$scope.cart.CartId;
             orderinfo.Payment_Type = $scope.regInfo.selectedCCType.text;
             orderinfo.poNumber = $scope.regInfo.poNumber;
             if($scope.shipmentType=='Single'){ //for single Shipment type
               orderinfo.Shipping_Method=$scope.regInfo.selectedShipMethod.value;
               orderinfo.Shipping_Method_Value=$scope.regInfo.selectedShipMethod.text;
               orderinfo.Shipto_Name=$scope.regInfo.shipTo;
               orderinfo.ShipTo_Phone=$scope.regInfo.shipPhone;
               orderinfo.ShipTo_Address="";
               orderinfo.Shipping_Instructions=$scope.regInfo.shippingInstruction;

           }

           orderinfo.PocAcctNumber = $scope.regInfo.selectedPOC_Account_NumberType.text;
             //console.log("----POC Account Number---->>"+$scope.regInfo.selectedPOC_Account_NumberType.text);
             spinnerOptions.Radius=0;   // Change Spinner Size;

             //console.log("----sending data in submt---->>"+JSON.stringify(orderinfo) );

             //$rootScope.spinner = new Spinner(spinnerOptions.Radius).spin($('#checkout-collapse3')[0]);

             //$('.pageLoad').show();

             APTSMD_ApttusLabService.submitOrder(orderinfo, function(err, data){
               $rootScope.$apply(function(){
                     //console.log( "--response of submit order--->>>>"+JSON.stringify(data));
                     if(defined(data.result))
                     {
                       $scope.cart.cartLineItems=[];
                       $scope.orderconfirm($scope.regInfo);
                     //  $scope.orderconfirm($scope.regInfo);
                   }
                     $timeout(function () {
                         					//$rootScope.spinner.stop();
                         					$('.pageLoad').hide();
                     						}, 1000);
                 });
           });
              $timeout(function () {
                                      //$rootScope.spinner.stop();
                                      //$scope.orderconfirm($scope.regInfo);
                  						$('.pageLoad').hide();
                  						return true;
              						}, 1000);
         }

         var clrInt=null;
         $scope.changeStep = function(num,isValidate)
         {
                                    if($scope.cart.cartLineItems.length<=0) $scope.goCart();   // Check Cart Is Empty. If empty the to  cart page.

                                    //$('#validatePhone').hide();
                                    $scope.IsCardValidate=false;
                                    if(!isValidate){
                                        $scope.checkoutStep=num;
                                        return;
                                    }

                                    if(ValalidateCheck(num-1))
                                    {
                                        if(num==3)//Validate Card on Continue Step Click
                                        {
                                            var l = $scope.regInfo.cardNumber;
                                            var len = $scope.regInfo.cardNumber.length;
                                            var t = $scope.regInfo.selectedCCType.text;



                                            var visaR =/^4[0-9]{12}(?:[0-9]{3})?$/;
                                            var amexR =/^3[47][0-9]{13}$/;
                                            var masterRegex = /^5[1-5][0-9]{14}$/;

                                            var x = /^[0-9]*$/;
                                            var cvvFlag =false;

                                            if(  !x.test( $('#cvv').val()) ){
                                                $('#cvvNoErrprMsg').show().html('Enter valid CVV Number.');
                                            }else{
                                                $('#cvvNoErrprMsg').css('display','none');
                                                cvvFlag = true;
                                            }



                                            if($scope.cybersource1 == 'Cybersource') {
                                                if( t =='VISA' && !visaR.test(l) ){
                                                    $('#cardNoErrorMsg').show().html('Enter valid Card Number of VISA Card Type.');
                                                }else if( t=='AMEX' && !amexR.test(l) ){
                                                    $('#cardNoErrorMsg').show().html('Enter valid Card Number of AMEX card Type.');
                                                }else if( t== 'MASTERCARD' &&  !masterRegex.test(l)){
                                                    $('#cardNoErrorMsg').show().html('Enter valid Card Number of MASTERCARD card Type.');
                                                }else{

                                                    $('#cardNoErrorMsg').css('display','none');
                                                    if(  cvvFlag ){
                                                        var obj = $('#checkout-collapse2');
                                                    spinnerOptions.Radius=0;   // Change Spinner Size;
                                                    $rootScope.spinner = new Spinner({Radius:0}).spin(false).spin(obj[0]);

                                                    console.log('clicked');
                                                    console.log($scope.regInfo);
                                                    //adding code of card verfication
                                                    console.log(JSON.stringify($scope.regInfo));
                                                    $scope.alertmsg=function ()
                                                    {
                                                        var x;
                                                        if (confirm($scope.result) == true) {
                                                            x = "You pressed OK!";
                                                            console.log(' X :'+x);
                                                        } else {
                                                            x = "You pressed Cancel!";
                                                        }

                                                    }
                                                    function authrequest(){
                                                     console.log('inside validate construct ');
                                                     this.id='';
                                                     this.FirstName = null;
                                                     this.LastName = null;
                                                     this.Street1 = null;
                                                     this.City = null;
                                                     this.State = null;
                                                     this.Postalcode = null;
                                                     this.Country = null;
                                                     this.phoneNumber = null;
                                                     this.Email = null;
                                                     this.creditcardtype = null;
                                                     this.accountNumber = null;
                                                     this.expirationMonth = null;
                                                     this.expirationYear = null;
                                                     this.amount = null;
                                                 }
                                                 var auth=new authrequest();
                                                 auth.FirstName=$scope.regInfo.addressInfo.FirstName;
                                                 auth.LastName=$scope.regInfo.addressInfo.LastName;
                                                 auth.Street1='Test';
                                                 auth.City= 'Test';
                                                 auth.State='Test';
                                                 auth.Postalcode='380007';
                                                 auth.Country='Test';
                                                 auth.phoneNumber='1234567890';
                                                 auth.Email='mmehta@apttus.com';
                                                 auth.creditcardtype=$scope.regInfo.selectedCCType.text;
                                                 auth.accountNumber=$scope.regInfo.cardNumber;
                                                 auth.expirationMonth=$scope.regInfo.expirationDateMonth.id;
                                                 auth.expirationYear=$scope.regInfo.expirationDateYear.text;
                                                 auth.cardtype=auth.creditcardtype;
                                                 auth.amount=100;





                                                    // auth.FirstName='Mansi';
                                                    // auth.LastName='Mehta';
                                                    // auth.Street1='Test';
                                                    // auth.City= 'Test';
                                                    // auth.State='Test';
                                                    // auth.Postalcode='3800006';
                                                    // auth.Country='Test';
                                                    // auth.phoneNumber='1234567890';
                                                    // auth.Email='mmehta@apttus.com';
                                                    // auth.creditcardtype='Visa';
                                                    // auth.accountNumber='6111111111111111';
                                                    // auth.expirationMonth=06;
                                                    // auth.expirationYear=2020;
                                                    // auth.amount=100;

                                                    $scope.authreq.push(auth);
                                                    console.log($scope.authreq);
                                                    // if($scope.cybersource1 == 'Cybersource') {

                                                    // }




                                                    //end code
                                                    var prodcutTotal =$scope.getProductTotal();
                                                    $scope.regInfo.SubTotal=prodcutTotal;
                                                    //console.log('>>>>  $scope.regInfo.SubTotal 2>> :'+ $scope.regInfo.SubTotal);
                                                    var clrInt= setInterval(function(){
                                                        $rootScope.$apply(function(){
                                                            //$scope.checkoutStep=num;
                                                            clearInterval(clrInt);
                                                        });
                                                    }, 3000);

                                                    $timeout(function () {$rootScope.spinner.stop().spin(false);}, 3000);
                                                }
                                            }
                                        }

                                    }

                                    else if(num==1 || num==2 )
                                    {

                                        if(num == 2){
                                            var pattern= /^(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{4})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$/;
                                            var phno = $('#txtShipPhone').val() ;
                                            var len = $('#txtShipPhone').val().length ;

                                            if(  pattern.test(phno) && len!= 7 ){
                                                $('#validatePhone').hide();
                                                $scope.checkoutStep=num;

                                            }else{
                                                $('#validatePhone').show();
                                            }
                                        }else{
                                                //$scope.checkoutStep=num;
                                                var prodcutTotal =$scope.getProductTotal();
                                                $scope.regInfo.SubTotal=prodcutTotal;
                                            }
                                        }

                                    }else{
                                        $timeout(function () {$rootScope.spinner.stop().spin(false);}, 3000);
                                    }



                                }



                                $scope.limitName = function(name, len) {
                                    if(name === null || typeof name === 'undefined')
                                        return '';

                                    if(name.length> len)
                                        name = name.substring(0,len) + '...';
                                    return name;
                                }

                                $scope.applyPromotion = function()
                                {
                                    var obj = $('#checkout-collapse3')
                                    spinnerOptions.Radius=0;   // Change Spinner Size;
                                    $rootScope.spinner = new Spinner(spinnerOptions.Radius).spin(false).spin(obj[0]);
                                    console.log('--in apply Promotion---'+$scope.cart.CartId);
                                    var promoCode = $scope.PromoCode;
                                    APTSMD_ApttusLabService.getPromotionAmount($scope.cart.CartId,promoCode, function(err, data) {
                                        $rootScope.$apply(function(){
                                            $scope.regInfo.Promotion = data.result;
                                            console.log('--$scope.regInfo.Promotion ---'+$scope.regInfo.Promotion);
                                            $rootScope.spinner.stop();
                                        });
                                    });
                                }


                            }]);


/* ***********************************************ProdItemCtrl************************************************/


myApp.controller('prodItemCtrl', ['$scope', '$rootScope', '$timeout', function ($scope, $rootScope, $timeout) {
    //console.log('########### prodItemCtrl');
                                $scope.currency = '{!currencySym}';//'$' ;
                                $scope.conversion = {!dExchangeRate};
                                $scope.envPath = envPath;
                                $scope.gridMode = $rootScope.gridMode;



                                $scope.limitName = function(name, len) {
                                 if(name === null || typeof name === 'undefined')
                                     return '';
                                 if(name.length> len)
                                     name = name.substring(0,len) + '...';
                                 return name;
                             }
                         }]);

/* ***********************************************OrderHistory************************************************/

myApp.controller('OrderHistoryCtrl', ['$scope', '$rootScope', '$timeout', function ($scope, $rootScope, $timeout)
{
     $scope.currency = '{!currencySym}';
  console.log('########### OrderHistoryCtrl');
  $scope.isValidUser = '{!isValidUser}';
    $scope.supportedRegion = '{!userSupportedRegion}';
  $scope.userType = '{!TEXT($User.UserType)}';
  if($scope.userType.indexOf('Partner')>0){
      $scope.isValidUser='true';
  }
  //$rootScope.spinner = new Spinner(spinnerOptions).spin($('#orderhistory')[0]);
    //$rootScope.spinner = new Spinner(spinnerOptions.Radius).spin(false).spin($('#orderhistory')[0]);
  $scope.orderHistory=[];
  $scope.assetHistory=[];
  $scope.storePriceList1 = '{!storePriceList}';
  $scope.contractpriceliststore1 = '{!contractpriceliststore}';
  APTSMD_ApttusLabService.getOrderHstory($scope.storePriceList1,function(err, data) {
      $rootScope.$apply(function(){
          $scope.orderHistory= data.result;
          console.log('****************Orderlineitem');
          console.log($scope.orderHistory);
          $rootScope.spinner.stop();
      });
  });
   // getOrderTotal added by vivek as on 20-6 to return orderwise total
      $scope.getOrderTotal = function(orderIdofCaller){
            //var orderline = _.findWhere($scope.orderHistory, {OrderId: orderIdofCaller});
            //filter order by order ID
            $scope.callerorder = $scope.orderHistory.filter(function (obj1) {
              if (obj1.OrderId.indexOf(orderIdofCaller) > -1) {
                  return (obj1);
              }
          });
          //copy orderlines
          $scope.callerorderline = $scope.callerorder[0].orderline;
            var total = 0;
            //perform addition
            for(var i = 0; i < $scope.callerorderline.length; i++){
                var singleproductobj = $scope.callerorderline[i];
                total += (singleproductobj.Netprice);
            }
            return total;//return total
       }
  APTSMD_ApttusLabService.getAssetHstory(function(err, data) {
      $rootScope.$apply(function(){
          $scope.assetHistory= data.result;
          $rootScope.spinner.stop();
      });
  });
}]);




/* ***********************************************ProductController************************************************/

myApp.controller('ProductController', ['$scope', '$rootScope', '$timeout', function ($scope,$rootScope, $timeout) {
    console.log('########### ProductController');
     $scope.currency = '{!currencySym}';
    $scope.collegeURL = 'https://college.kuka.com//sites/5/en-US/all/all/action?oid=';
    $scope.collegePostURL = '-&SessionContextID=DEFAULT_ID';

    if("{!UserLanguage}" == "de")
        {
            $scope.collegeURL = 'https://college.kuka.com//sites/5/de-de/all/all/action?oid=';
        }
    $scope.conversion = {!dExchangeRate};
    $scope.isValidUser = '{!isValidUser}';
    $scope.supportedRegion = '{!userSupportedRegion}';
    $scope.userType = '{!TEXT($User.UserType)}';
    if($scope.userType.indexOf('Partner')>0){
        $scope.isValidUser='true';
    }
    $scope.topDealLoaded=false;
    $scope.showPromo1 = true;
    $scope.store = {!store};
    storeObject = $scope.store;
    $scope.logoImage = '{!logo}';
    //$scope.bannerImage = '{!banner}';
    $scope.promotionImages = {!promoImagesJSON};
    $scope.storePriceList = $scope.store.APTSMD_Price_List__c;
    $scope.contractpriceliststore3 = $scope.store.APTSMD_Contract_Price_List__c;
    if($scope.store.APTSMD_Contract_Price_List__c == undefined){
        $scope.contractpriceliststore3='';
    }
    console.log('###########');
    console.log($scope.store);
    $scope.fieldsetFields = JSON.parse('{!fieldsetNameVsLabelJson}');
    //console.log($scope.fieldsetFields);
    $scope.topCategoryName = '{!TopCategoryName}';
    console.log('>>> Top category : '+$scope.topCategoryName);
    $scope.envPath = envPath;
    $scope.sitePrefix = '{!$Site.Prefix}';

    console.log('prefix : '+$scope.sitePrefix);
    $scope.categories = [];
    $scope.products = [];
    $scope.category= null;
    $scope.subCategories = [];
    $scope.cart = [];
    $scope.cartTotal = 0;
    $scope.features=[];
    $scope.alsoBoughtProds=[];
    $scope.filteredProds=[];
    $scope.envPathslds = '{!envPathslds}';
    $scope.userLogoURL = '{!userLogoURL}';
    console.log(' slds path---'+$scope.envPathslds);
    $scope.promoURL = '{!URLFOR($Resource.APTSMD_Promo1)}';
    $scope.loyaltyURL = '{!URLFOR($Resource.APTSMD_Loyalty)}';
    console.log('---promo URL --'+$scope.promoURL);
    console.log('---loyalty URL --'+$scope.loyaltyURL);
    /*$scope.bannerImage = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.APTSMD_SideBannerDocId__c}';*/
    $scope.bannerImage = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!banner}';
    $scope.reviewStar=$scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.APTSMD_ReviewStarDocId__c}';

    $scope.createOrderFromStore = function(){
     APTSMD_ApttusLabService.createOrderFromStore($scope.storePriceList,function(err, data) {
         console.log('---createOrderFromStore finish');
     });
     }

     console.log('---createOrderFromStore');
     $scope.createOrderFromStore();

     $scope.getFeaturset = function(){

        var prodsId=[];
        angular.forEach($scope.products,function(items){
            angular.forEach(items,function(item){
                prodsId.push(item.ProductId);
            });
        });
    APTSMD_ApttusLabService.getProductFeatureset(prodsId,function(err,data){
        console.log('-------');
        //console.log(data);
        console.log(data.result);
        $scope.features=data.result;
            //console.log($scope.fullProds);
        });
        //get recommended products in cart page - MNS-Recom
        // APTSMD_ApttusLabService.getAlsoBoughtProducts(prodsId,function(err,data){

        //     console.log('----also bought---');
        //     console.log(data);
        //     console.log(data.result);
        //     $scope.alsoBoughtProds=data.result;
        //     //console.log($scope.fullProds);
        // });

    };
    //-------for bxSlider to work
    function loadGoogleScript(filename){
        console.log(1);
        var fileref = document.createElement('script');
        fileref.setAttribute("type","text/javascript");
        fileref.setAttribute("src", filename);
        document.getElementsByTagName("head")[0].appendChild(fileref);
    }
    $scope.$on('$includeContentLoaded', function(event) {
        //set typeahead ul style to display properly
        $("#globalSearchDiv .dropdown-menu").css('left','auto');
        $("#globalSearchDiv .dropdown-menu").css('top','50px');
        $("#globalSearchDiv .dropdown-menu").css('position','fixed');
       // console.log("--- INCLUDE CONTENT LOADED ");
        //$scope.showsearch('a');
        //$scope.showsearch('');

          // Code added by Mehul Parmar - Start  (Top Deal Slider)
        $scope.checkAndEnableBxSlider();

    });



        $scope.gridMode = $rootScope.gridMode = 'grid'
        $scope.refineFieldsFilters ={!searchFilterRefinedynamic};
        $scope.refinesearchquecvf = {!refinesearchque};
        //  $scope.refineFieldsFilters ={!searchFilterRefine};
        console.log($scope.refineFieldsFilters);
        console.log('$scope.gridMode :'+$scope.gridMode);
                             //Mayur
             $scope.guidedProducts = [];
             $scope.topDealProducts = [];
             $scope.pickedUpProducts = [];
             $scope.pastOrderProducts = [];

             //$scope.showTopDeal;
             $scope.showPickedUp;
             $scope.showPast;
             $scope.showRecom;

             $scope.showPickedUpTemp =$scope.store.APTSMD_ShowPickedUpProductsSection__c;
             $scope.showPastTemp = $scope.store.APTSMD_ShowPastOrder__c;
             $scope.showTopDealTemp =  $scope.store.APTSMD_ShowTopDeal__c;

             $scope.showPromo = true;
            $scope.showGuided = '{!$CurrentPage.parameters.showGuide}'; //for showing Guided Selling

            $scope.setSpecialProductVisibility = function(){
                $scope.showPast = $scope.showPastTemp;
                $scope.showPickedUp=$scope.showPickedUpTemp;
                $scope.showTopDeal = $scope.showTopDealTemp;

        };
        $scope.setSpecialProductVisibility();

        console.log(' - > $scope.isValidUser  : '+$scope.isValidUser);
        console.log(' - > $scope.showTopDeal  : '+$scope.showTopDeal);
        console.log(' - > $scope.showPast  : '+$scope.showPast);
        console.log(' - > $scope.showGuided  : '+$scope.showGuided);
        console.log(' - > $scope.showPickedUp  : '+$scope.showPickedUp);
        console.log('showGuided'+$scope.showGuided);

        $scope.showToolTip = function(compId,divId) {

            var temp = $('#'+compId).position();
            var h = $('#'+compId).css('height');
            var height = h.substring(0, h.indexOf('p'));
            console.log('height------> '+height);
            var top = parseInt(temp.top)+ 10;
            console.log('new top----> '+top);
            var left = parseInt(temp.left) + 10;
        // console.log('--Top--'+top);$('#'+compId).width()
        // console.log('--left--'+left);
        var ele = document.querySelector("#"+ divId);
        // console.log(ele);
        angular.element(ele).css("top",top+"px");
        //angular.element(ele).css("bottom",top+"px");
        //angular.element(ele).css("left",left+"px");
        angular.element(ele).css("background-color","#EEEEEE");
        //angular.element(ele).css("z-index","99");
        $('#'+divId).show();

    }
    $scope.hideToolTip = function(divId) {
        var ele = document.querySelector("#"+ divId);
        // console.log(ele);
        $('#'+divId).hide();
    }


    //$scope.showTopDeal = 1;
    //Gurbir - MNS
    $scope.pagedItems = [];
    $scope.currentPage = 0;
    $scope.filteredItems = [];
    $scope.groupedItems = [];
    $scope.PageSize = new Array();

    var noOfColumns = parseInt($scope.store.APTSMD_ColumnsToDisplay__c);
    var noOfRows = parseInt($scope.store.APTSMD_RowsToDisplay__c);
    var increment = parseInt($scope.store.APTSMD_RowsToIncrement__c);
    for(var i=noOfRows;i<=20;i+=increment){
        $scope.PageSize.push({value:noOfColumns*i});
    }
    $scope.colValue = 12/noOfColumns; //for Bootstrap we have to divide it by 12
   // $scope.preparePageSizeList();
   // $scope.PageSize=[{value:10},{value:20},{value:50},{value:100}];

    $scope.itemsPerPage;

    $scope.itemsPerPage = $scope.PageSize[0];

    if($scope.store.APTSMD_ShowPagination__c!=true){
        if($scope.store.APTSMD_NumberOfProducts__c != undefined && $scope.store.APTSMD_NumberOfProducts__c != ''){
            $scope.PageSize[0].value = $scope.store.APTSMD_NumberOfProducts__c;
        }else{
            $scope.itemsPerPage = $scope.PageSize[3];
        }
    }
    $scope.searchedVal="";
    $scope.searchValueincatalog='sun';
    $scope.Issearched=false;
    $scope.IsShowSearch=false;
    $scope.IsFilter=false;
    $scope.userNameStr="";
    $scope.contactUs="Contacts";
    $scope.CurrentOrderInfo=[];
    $scope.proposalInfo = [];
    $scope.IsShowHistoryOrder=false;
    $scope.priceRuleEntry={!priceMatrix};
    $scope.isItemInserting= false;

                                            // Code added By Mehul Parmar  - Start

                                            //By mayur image url is of document - to dislay images in rating filter
      $scope.starImageMap = {
      'Excellent':$scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.ExcellentDocId__c}',
      'Very Good':$scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.VeryGoodDocId__c}',
      'Good':$scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.GoodDocId__c}',
      'Not Good':$scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.NotGoodDocId__c}',
      'Poor':$scope.sitePrefix+'/servlet/servlet.FileDownload/?file={!$Setup.Apttus_Presales_eCommerce_Settings__c.PoorDocId__c}'
      };


     $scope.veryGood = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file=01536000001RnUa';
     console.log(' veryGood : ');
     console.log($scope.starImageMap);
                           /*var lowRating = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file=01536000001RnUY';
       var bad = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file=01536000001RnUa;

       $scope.veryGood = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file=01536000001RnUW';//$sce.trustAsResourceUrl(howRating);
       $scope.good=  $scope.sitePrefix+'/servlet/servlet.FileDownload/?file=01536000001RnUY';//$sce.trustAsResourceUrl(lowRating);
       $scope.notGood = $scope.sitePrefix+'/servlet/servlet.FileDownload/?file=01536000001RnUa; //$sce.trustAsResourceUrl(bad);
       console.log('$scope.veryGood'+$scope.veryGood);*/

       $scope.showRefineSearch = true;
       $scope.showHideRefineSearch = function(){
         $scope.showRefineSearch =!$scope.showRefineSearch;
     }
     $scope.saveRefineStatus = function(item){
         console.log('item');
         item.showChilds =!item.showChilds;
     }

     $scope.refineProducts = function(item){
         console.log(item);
     }

       // Code added By Mehul Parmarc  - End
       APTSMD_ApttusLabAngularJS.getAllSelectedFilters(function(err, data) {
         $rootScope.$apply(function(){
             $scope.currency = data.result;
         });
     });



        //Gurbir  Pagination Start
        $scope.NextPage=function(pageIndex) {
            $scope.currentPage=pageIndex==$scope.products.length-1 ? $scope.products.length-1 :pageIndex+1;
        };
        $scope.PrevPage=function(pageIndex) {
            $scope.currentPage= pageIndex==0 ? 0 : pageIndex-1;
        };

        $scope.showsearch=function(varSearchedVal)  {
            //console.log('text - ');
            //console.log(varSearchedVal);
            //console.log('text length - ');
            //console.log(varSearchedVal.length);

            $("#globalSearchDiv .dropdown-menu").css('top','auto');
            $("#globalSearchDiv .dropdown-menu").css('left','auto');
            $("#globalSearchDiv .dropdown-menu").css('position','relative');

            console.log("jon 1.2");

            if(varSearchedVal.length==1){ //for type ahead bug being weirdly styled after 1st char. not displaying dropdown until 2nd char.

                $("#globalSearchDiv .dropdown-menu").css('visibility','hidden');
                $("#globalSearchDiv .dropdown-menu").css('left','auto');
                //$("#globalSearchDiv .dropdown-menu").css('top','1000px');
                $("#globalSearchDiv .dropdown-menu").css('position','fixed');

                console.log('css fix applied');

            } else {
                $("#globalSearchDiv .dropdown-menu").css('visibility','visible');


            }

            varSearchedVal=varSearchedVal.toLowerCase();
            $scope.searchedVal=varSearchedVal;

            $scope.products=[];
            $scope.Issearched=true;
            $scope.showTopDeal=false;
            $scope.showPromo1=false;
            $scope.currentPage = 0;
            $scope.itemsPerPage = $scope.PageSize[3];
            $scope.groupToPages($scope.itemsPerPage);

        }

        /* to fetch Guided Products*/

        $scope.getGuidedProducts = function(){
         $scope.guidedProducts = [];


         APTSMD_ApttusLabService.getGuidedProdList($scope.storePriceList,$scope.contractpriceliststore3,function(err, data) {
             $scope.guidedProducts = data.result;
             console.log('---Guided Products---');
             console.log($scope.guidedProducts);
             console.log('---getGuidedProducts');

         });
     }

     console.log('---getGuidedProducts67987');
       //$scope.getGuidedProducts();
       console.log('getGuidedProducts');
       /* to fetch PickedUp Products*/
       $scope.pickedUpProductIds = '{!weHavePickedProdIds}';
       $scope.getPickedUpProducts = function(){
           //alert(11);
           $scope.guidedProducts = [];
           APTSMD_ApttusLabService.getPickedUpProdList($scope.storePriceList,$scope.pickedUpProductIds,$scope.contractpriceliststore3,function(err, data) {
              console.log('>> picked up result : ');
              console.log(data.result);
              $scope.pickedUpProducts = data.result;
          });
       }

       $scope.getPickedUpProducts();
       console.log('getPickedUpProducts');
       /* to fetch Past Order Products*/
       $scope.pastOrderProdIds = '{!pastOrderProdIds}';
       $scope.getPastOrderProducts = function(){
         $scope.guidedProducts = [];
         APTSMD_ApttusLabService.getPastOrderProdList($scope.storePriceList,$scope.pastOrderProdIds,$scope.contractpriceliststore3,function(err, data) {
             $scope.pastOrderProducts = data.result;
         });
     }

     $scope.getPastOrderProducts();
     console.log('getPastOrderProducts');
     /* to fetch Top DealProducts*/
     $scope.topDealProdIds = '{!topDealProdIds}';
     console.log('topDealProdIds :: '+$scope.topDealProdIds);

     $scope.getTopDealProducts = function(){
         $scope.topDealProducts = [];
         APTSMD_ApttusLabService.getTopDealProdList($scope.storePriceList,$scope.topDealProdIds,$scope.contractpriceliststore3,function(err, data) {
             $scope.topDealProducts = data.result;
             console.log( $scope.topDealProducts);
         });
     }

     $scope.getTopDealProducts();
     console.log('getTopDealProducts');
     /*Promotions*/
     $scope.getPromotions=function(){
         $scope.promotions = [];
         APTSMD_ApttusLabService.getPromotions(function(err, data) {
             if(defined(data,"result")){
                 $rootScope.$apply(function(){
                     console.log('Promotions='+data);
                     for(var counter=0;counter<data.result.length;counter++) {
                         $scope.promotions.push(data.result[counter]);
                     }
                 });
             }
         });
     }

     $scope.getPromotions();

     $scope.funShowSearch=function(){ $scope.IsShowSearch =$scope.IsShowSearch ? false : true;
     };
     $scope.RefreshView=function() {
         $scope.searchedVal="";
         $scope.Issearched=false;
         $scope.IsShowSearch=false;
         $scope.groupToPages($scope.itemsPerPage);
     };



     $scope.groupToPages = function (item) {
         $scope.currentPage = 0;

         $scope.itemsPerPage=item;
         if($scope.Issearched)
         {
             var  searchedproducts=[];
             if($scope.searchedVal != "")
             {
                   //if searching hide the special prducts section
                   $scope.showTopDeal = false;
                   $scope.showPickedUp = false;
                   $scope.showPast = false;
                   $scope.showRecom = false;
                   $scope.showPromo = false;
                   var varSearchedVal= $scope.searchedVal.toLowerCase();

                   for (var i = 0; i < $scope.fullProds.length; i++)
                   {
                     var  currentproduct=$scope.fullProds[i];
                       // ||(defined(currentproduct.SearchDescription) && currentproduct.SearchDescription.toString().toLowerCase().contains(varSearchedVal)) ||
                       // currentproduct.cat.toString().toLowerCase().contains(varSearchedVal) ||
                       // currentproduct.subCat.toString().toLowerCase().contains(varSearchedVal)
                       if(currentproduct.ProductName.toString().toLowerCase().contains(varSearchedVal))



                       {
                         searchedproducts.push(currentproduct);
                     }
                     else if(currentproduct.ProductCode != null){
                         if(currentproduct.ProductCode.toString().toLowerCase().contains(varSearchedVal)){
                             searchedproducts.push(currentproduct);
                         }
                     }

                 }

             }
             else{
                   //if searching clear show the special prducts section
                   $scope.setSpecialProductVisibility();
                   $scope.showPromo = true;
                   $scope.showPromo1 = true;
                   for (var i = 0; i < $scope.fullProds.length; i++)
                   {
                     console.log('-----Product : '+i);
                     console.log($scope.fullProds[i]);
                     var  currentproduct=$scope.fullProds[i];
                     searchedproducts.push(currentproduct);
                 }
             }
             $scope.products=[];
             for (var i = 0; i < searchedproducts.length; i++) {
                 if (i % $scope.itemsPerPage.value  === 0) {
                     $scope.products[Math.floor(i / $scope.itemsPerPage.value)] = [searchedproducts[i]];
                 }
                 else {
                     $scope.products[Math.floor(i / $scope.itemsPerPage.value)].push(searchedproducts[i]);
                 }
             }

         }
         else if($scope.IsFilter)
         {
             $scope.filterList();
         }
         else
         {
             $scope.products=[];
             for (var i = 0; i < $scope.filteredProds.length; i++) {
                 if (i % $scope.itemsPerPage.value === 0) {
                     $scope.products[Math.floor(i / $scope.itemsPerPage.value)] = [$scope.filteredProds[i]];
                 }
                 else {
                     $scope.products[Math.floor(i / $scope.itemsPerPage.value)].push($scope.filteredProds[i]);
                 }
             }
         }
         $scope.getFeaturset();
     };

     $scope.range = function (start,end) {
         var startPage = $scope.currentPage;
         var ret = [];
         var itemPagingCount  = Object.keys($scope.products).length;
         var rangeSize = 5;
         if(itemPagingCount  >0 && itemPagingCount> rangeSize )
         {
             if (startPage > itemPagingCount  -rangeSize )
             {
                 startPage = itemPagingCount - rangeSize;
             }
             startPage =startPage<0 ? 0 : startPage;

             for (var i=startPage ; i<startPage +rangeSize; i++)
             {
                 ret.push(i);
             }
             return ret;
         }
         else
         {
             for (var i=0; i<itemPagingCount; i++)
             {
                 ret.push(i);
             }
             return ret;
         }
         return ret.push(1);
     };
     $scope.setPage = function () {  $scope.currentPage = this.n;};

     $scope.options=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];

    $scope.ciToProd = function(cartItem)
    {
        var prod = _.findWhere($scope.fullProds, {ProductId: cartItem.ProductId});
        return prod;
    }
     $scope.changeCartItemQuantity = function(cartItem, quantity) {

         console.log(cartItem.lineItemId);

         if(quantity < 1)
             return;

         if(quantity >= 5000){
             console.log('id show--->' + '#qty'+cartItem.lineItemId);
             $('#qty'+cartItem.lineItemId).show();
             $('#checkout-cart-button').hide();
             $('#checkout-cart-error-message').show();
             return;
         }else{
             $('#checkout-cart-error-message').hide();
             $('#checkout-cart-button').show();
         }

         console.log('Quantity--->> '+quantity);
           //localStorage.x =quantity

           var prod = _.findWhere($scope.fullProds, {ProductId: cartItem.ProductId});
           //show spinner
           $('#cartSpin').show();
           $('#cartSpinDiv').show();
           var ci = {};
           if(defined(prod)) {
             ci.ProductId = prod.ProductId;
             cartItem.iQuantity = ci.iQuantity = quantity;
             ci.lineItemPrice = 0;
             APTSMD_ApttusLabService.modifyCartItemQuantity(cartItem.lineItemId, $scope.cart.CartId, ci.iQuantity,ci.ProductId, function(err, data) {
                   //console.log(data);
                   console.log('in callback');
                   console.log(data.result);
                   //hide cart spinner
                   $('#cartSpin').hide();
                   $('#cartSpinDiv').hide();
                   var cartDetails= data.result;
                   if(defined(cartDetails,"cartWrapper")){
                     $scope.cart.CartId=cartDetails.cartWrapper.CartId;
                     $scope.cart.OrderId=cartDetails.cartWrapper.OrderId;
                     $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });
                     console.log('------cart wrapper-------');
                     console.log(cartDetails);
                 }

             });
             console.log('getTotal called--');
               //$scope.$apply();



               // APTSMD_ApttusLabService.removeCartItem(cartItem.ProductId, $scope.cart.CartId, function(err, data) {
               // });
               // APTSMD_ApttusLabService.addCartItem(ci.ProductId,ci.iQuantity,$scope.cart.CartId, function(err, data) {
               // })

           }
       }

       $scope.getProductImage = function(id) {
         var prod = _.findWhere($scope.fullProds, {ProductId: id});
         if(defined(prod,"ImageUrl")) {
             return "/" + prod.ImageUrl;
         } else {
             return null;
         }
     }
     $scope.getProducRatingImage= function(id) {
         var prod = _.findWhere($scope.fullProds, {ProductId: id});
         if(defined(prod,"ratingURL")) {
             return prod.ratingURL;
         } else {
             return envPath + '/img/noimage.png';
         }
     }
     $scope.getProductName = function(id) {
         var prod = _.findWhere($scope.fullProds, {ProductId: id});
         if(defined(prod,"ProductName")) {
             return prod.ProductName;
         } else {
             return '';
         }
     }
    $scope.productHasOptions = function(id) {
        var prod = _.findWhere($scope.fullProds, {ProductId: id});
        if(defined(prod.hasOptions)) {
             if(prod.hasOptions==true){
                 return true;

             }
         }
         return false;
    }
     $scope.getProductTotal = function() {
         if(defined($scope,"cart.cartLineItems.length")) {
             var total=0;
               //console.log('---in total---');
               //console.log($scope.fullProds);
               for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                 var prod = _.findWhere($scope.fullProds, {ProductId: $scope.cart.cartLineItems[i].ProductId});
                   // console.log('inside product total');
                   // console.log(prod);
                   if(defined(prod.hasOptions)) {
                     if(prod.hasOptions==true){
                         total+=$scope.cart.cartLineItems[i].bundlePrice;

                     }else{
                         total+=$scope.cart.cartLineItems[i].netPrice;
                     }
                 }
             }
             if(isNaN(total)==true){
                console.log('---------NaN----------');
                APTSMD_ApttusLabService.repriceCart($scope.cart.CartId, function(err, data) {

                  var cartDetails= data.result;
                  console.log(cartDetails);
                  if(defined(cartDetails,"cartWrapper")){
                    $scope.cart.CartId=cartDetails.cartWrapper.CartId;
                    $scope.cart.OrderId=cartDetails.cartWrapper.OrderId;
                    $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });
                }
            });
                total=0;
                for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                 var prod = _.findWhere($scope.fullProds, {ProductId: $scope.cart.cartLineItems[i].ProductId});
                       // console.log('inside product total');
                       // console.log(prod);
                       if(defined(prod.hasOptions)) {
                         if(prod.hasOptions==true){
                             total+=$scope.cart.cartLineItems[i].bundlePrice;

                         }else{
                             total+=$scope.cart.cartLineItems[i].netPrice;
                         }
                     }
                 }

             }
                 //console.log('final amt : '+total);
                 return total;
             } else {
               return 0;
           }
       }

       //MNS- Get % OFF Value
       $scope.getPriceDiffPer = function(mainPrice,contractedPrice){
            var per = ((mainPrice-contractedPrice)*100)/mainPrice;
            return Math.round(per);

       }
       $scope.getProductPrice = function(id, quantity) {
 // var prod = _.findWhere($scope.products, {ProductId: id});
     var prod = _.findWhere($scope.fullProds, {ProductId: id});
     if(!defined(quantity))
         quantity = 1;
       if(defined(prod,"PriceItem.Apttus_Config2__SalePrice__c")) {
           return prod.PriceItem.Apttus_Config2__SalePrice__c * quantity;
       } if(defined(prod,"PriceItem.Apttus_Config2__ListPrice__c")) {
           return prod.PriceItem.Apttus_Config2__ListPrice__c * quantity;
       } else {
           return 0;
       }
       }


               $scope.getUnitePrice = function(id)
               {
                   var prod = _.findWhere($scope.fullProds, {ProductId: id});
                   if(defined(prod))
                   {
                       var prodItem= prod.PriceItem;
                       if(!defined(prodItem,"Apttus_Config2__SalePrice__c") && !defined(prodItem,"Apttus_Config2__ListPrice__c"))
                           return 0.0;
                       else if(!defined(prodItem,"Apttus_Config2__SalePrice__c"))
                           return prodItem.Apttus_Config2__ListPrice__c;
                       else
                       {
                           if(prodItem.Apttus_Config2__SalePrice__c  &&    prodItem.Apttus_Config2__ListPrice__c != prodItem.Apttus_Config2__SalePrice__c)
                               return    prodItem.Apttus_Config2__SalePrice__c;
                           else if(!prodItem.Apttus_Config2__SalePrice__c && prodItem.Apttus_Config2__ListPrice__c)
                               return prodItem.Apttus_Config2__ListPrice__c;
                           else
                               prodItem.Apttus_Config2__SalePrice__c;
                       }
                   }
               }

               $scope.GetProduct=function(id){
                   $('#compareModal').modal('hide');
                   $('body').removeClass('modal-open');
                   $scope.selectProduct(_.findWhere($scope.fullProds, {ProductId: id}),true);
               }
               $scope.configureItem = function(product){

                   var prod = _.findWhere($scope.fullProds, {ProductId: product.ProductId});
                   $scope.bundleProduct = prod;

                   if(!defined($scope.bundleProduct.prodOptionGroups) || !defined($scope.bundleProduct.prodAttributeGroups) ){
                       APTSMD_ApttusLabService.getProductConfigurations(JSON.stringify(product),function(err, data) {

                           console.log('---Bundle Product Options---');
                           $scope.bundleProduct = data.result;

                           console.log($scope.bundleProduct);

                           $timeout(function () {
                               var today = new Date();
                               today.setHours(0, 0, 0, 0);
                               angular.forEach($scope.bundleProduct.prodAttributeGroups, function(attGroup){
                                  angular.forEach(attGroup.productAttributes, function(att){
                                    if(att.fieldType.toUpperCase() == 'DATE')
                                    {
                                        att.selectedValue = today;
                                    }
                                  });
                                });
                               init();
                               initProd();


                           }, 200);
                       });
                   }

                     /*if(!defined($scope.bundleProduct.prodOptionGroups) || !defined($scope.bundleProduct.prodAttributeGroups) ){
                 APTSMD_ApttusLabService.getBundleConfigurations(product.ProductId,function(err, data) {
                    console.log('---Bundle Product Options---');
                    $scope.bundleProduct.prodOptionGroups = data.result;
                    console.log($scope.bundleProduct);

                    $timeout(function () {
                      init();
                      initProd();
                    }, 200);
                });
            }*/


        }
        $scope.trimText = function(str){
          return str.replace(/ /g,'');
      }
      //MNS-
      $scope.enableLoadingIcon = function(){
        $('#cartLoading').show();
        $scope.isItemInserting = true;
        $('#viewCartBtn').addClass('disabled-pro');
        $('#viewCartBtn').css("background-color","#eee");
      }
      $scope.disableLoadingIcon = function(){
        $('#cartLoading').hide();
        $scope.isItemInserting = false;
        $('#viewCartBtn').removeClass('disabled-pro');
        $('#viewCartBtn').css("background-color",$scope.store.APTSMD_Action_Color__c);
      }
      $scope.addItemToCart = function(product)
      {

          //if($scope.cart.CartId=="" || $scope.cart.OrderId==""){
              console.log(' add to cart called');
              APTSMD_ApttusLabService.getCartDetails(function(err, data) {
                  var cartDetails= data.result;
              // console.log(' add to cart called 123');
              // console.log(data.result);
              // console.log(' add to cart called 2');
              // console.log(product);

              //console.log(' add to cart called 3');
              if(defined(cartDetails,"cartWrapper")){
                  $scope.cart.CartId=cartDetails.cartWrapper.CartId;
                  $scope.cart.OrderId=cartDetails.cartWrapper.OrderId;
                  $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });

                  //Update or Add items to cart logic
                  //console.log(' add to cart called 4');
                  if(defined($scope,"cart.CartId") && $scope.cart.CartId!="")
                  {
                      console.log(product.hasOptions);

                      $scope.enableLoadingIcon();//MNS

                      if(defined(product.hasOptions) && product.hasOptions!=true && defined(product.hasAttributes) && product.hasAttributes!=true ){//for standalone product

                          addToCartNotification(product);
                          var ci = jQuery.extend(true, {}, $scope.rawCart.cartItem);
                          ci.ProductId = product.ProductId;
                          ci.iQuantity = defined(product.currentQuantity) && product.currentQuantity>0 ? product.currentQuantity: 1 ;
                          ci.lineItemPrice = 0;
                          //ci.leadTime = product;
                          //console.log(' add to cart called 5');
                          if(defined(product,"PriceItem.Apttus_Config2__SalePrice__c"))
                              ci.lineItemPrice = product.PriceItem.Apttus_Config2__SalePrice__c;
                          else if(defined(product,"PriceItem.Apttus_Config2__ListPrice__c"))
                              ci.lineItemPrice = product.PriceItem.Apttus_Config2__ListPrice__c;
                          var findCartItem = _.findWhere($scope.cart.cartLineItems, {ProductId: product.ProductId} );
                          if(defined(findCartItem,"iQuantity") && defined(findCartItem,"lineItemId")){
                              findCartItem.iQuantity =ci.iQuantity= findCartItem.iQuantity + ci.iQuantity;    //Change the quantity existing cart itme.
                              //findCartItem.iQuantity =
                              APTSMD_ApttusLabService.modifyCartItemQuantity(findCartItem.lineItemId, $scope.cart.CartId, ci.iQuantity,ci.ProductId, function(err, data) {
                                  //console.log(data);
                                  if(defined(cartDetails,"cartWrapper")){
                                      //MNS
                                      $scope.disableLoadingIcon();
                                      $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });
                                  }
                              });
                              //APTSMD_ApttusLabService.removeCartItem(findCartItem.lineItemId, $scope.cart.CartId, function(err, data) { });
                          }else{
                              if(!defined($scope,"cart.cartLineItems"))
                                  $scope.cart.cartLineItems = [];
                              // $scope.cart.cartLineItems.push(ci);

                              APTSMD_ApttusLabService.addCartItem(ci.ProductId,ci.iQuantity,$scope.cart.CartId, function(err, data)
                              {
                                var cartDetails= data.result;
                                console.log(' After add to cart called');
                                console.log(cartDetails)
                                if(defined(data.result)){
                                    if(defined(cartDetails,"cartWrapper")){
                                        // ci.lineItemId=data.result.cartLineItems[data.result.cartLineItems.length-1].lineItemId;
                                        $scope.disableLoadingIcon();
                                        $scope.alsoBoughtProds = [];
                                        $rootScope.$apply(function(){
                                            $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems;
                                            $scope.alsoBoughtProds = $scope.getSuggestedProds(cartDetails.suggestedProdIds);
                                        });
                                    }
                                }
                            });
                          }
                      }else{// For Bundle Products
                         $scope.enableLoadingIcon(); //MNS
                          console.log('---Adding Bundle Product');
                          console.log(product);
                          var errors = "";
                          angular.forEach(product.prodAttributeGroups, function(attGroup){
                              angular.forEach(attGroup.productAttributes, function(att){
                                if(att.fieldType.toUpperCase() == 'DATE')
                                {
                                    var today = new Date();
                                    today.setHours(0, 0, 0, 0);
                                    if(!angular.isDate(att.selectedValue)|| att.selectedValue < today)
                                    {
                                        errors += ' ' + att.label;
                                    }

                                }
                              });
                            });
                            if(errors != "")
                            {
                                document.getElementById("bundle-errors").innerHTML = "{!$Label.APTSDMP_ConfigError}" + errors;
                              return;
                            }
                          document.getElementById("bundle-errors").innerHTML = "";
                          addToCartNotification(product);
                          $('#bundleConfigureModal').modal("hide");
                          APTSMD_ApttusLabService.addBundleWithOptions(JSON.stringify(product),$scope.cart.CartId, function(err, data){
                              var cartDetails= data.result;
                              console.log(' After Bundle add to cart called');
                              console.log(cartDetails);

                              $scope.disableLoadingIcon();//MNS

                              if(defined(data.result)){
                                  if(defined(cartDetails,"cartWrapper")){
                                      // ci.lineItemId=data.result.cartLineItems[data.result.cartLineItems.length-1].lineItemId;

                                      $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });

                                  }
                              }
                          });

                      }
                  }

              }
          });

};
    $scope.getSuggestedProds = function(suggestedProdIds){

        if(typeof suggestedProdIds != "undefined" && suggestedProdIds != null){
            var returnList = [];
            for(var i=0;i<suggestedProdIds.length;i++){
                returnList.push(_.findWhere($scope.fullProds, {ProductId: suggestedProdIds[i]}));
            }
            console.log('>>>>in Suggested products>>>');
            console.log(returnList);
            return returnList;
        }

    }
          //adding code for Reoder
          $scope.Reorder = function(Orderdetails) {
              var orderId = Orderdetails.OrderId;
              if(orderId == null) {
                  orderId = Orderdetails.Order_ID;
              }
              console.log('Reorder***************');
              console.log(Orderdetails);
              console.log(orderId);
              //console.log($scope.cart.CartId);
              APTSMD_ApttusLabService.reorderfunction(orderId,$scope.cart.CartId,function(err, data) {
                var cartDetails= data.result;

                console.log( 'Done reorder');
                console.log(cartDetails);
                    //   console.log(result);

                    $scope.cart.CartId=cartDetails.cartWrapper.CartId;
                    $scope.cart.OrderId=cartDetails.cartWrapper.OrderId;
                    $scope.cart.cartLineItems = cartDetails.cartWrapper.cartLineItems;
                    $rootScope.$apply(function(){
                        $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems
                    });
                    $timeout(function () {
                     $scope.mode='cart';
                     localStorage.setItem("currentMode",$scope.mode);
                 }, 300);
                });


    }




                      //end code

                      $scope.removeCartItem = function(cartItem) {
                         var found=-1;
                         for(var i=0; i<$scope.cart.cartLineItems.length; i++) {
                             if($scope.cart.cartLineItems[i].lineItemId == cartItem.lineItemId) {
                                 found=i;
                                 break;
                             }
                         }
                         if(found > -1) {
                             APTSMD_ApttusLabService.removeCartItem($scope.cart.cartLineItems[found].lineItemId, $scope.cart.CartId, function(err, data) {
                                 var cartDetails= data.result;
                                 console.log('>>After removing');
                                 console.log(cartDetails);

                                 if(defined(cartDetails,"cartWrapper")){
                                     $scope.alsoBoughtProds = [];
                                     $rootScope.$apply(function(){
                                        $scope.alsoBoughtProds = $scope.getSuggestedProds(cartDetails.suggestedProdIds);
                                    });
                                 }

                             });
                             $scope.cart.cartLineItems.splice(found, 1);
                         }

                     }

                     $scope.switchMode = function(mode) {
                         var obj = $('#spin')
                         //$scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
                         $('.pageLoad').show();
                         $timeout(function () {
                             $rootScope.$apply(function(){
                                 $scope.gridMode = $rootScope.gridMode = mode;
                             });
                             $timeout(function () {
                                 $scope.spinner.stop();
                             }, 500);
                             //$scope.spinner.stop();
                             $('.pageLoad').hide();
                         }, 500);
                     }

                     $scope.goCart = function() {
                        if($scope.isItemInserting == false){ //MNS- Go to cart page only if no product is inserting currently
                         $scope.mode='cart';
                         localStorage.setItem("currentMode",$scope.mode);

                         var isOrderSubmitted = false;
                         APTSMD_ApttusLabService.IsOrderSubmitted($scope.cart.OrderId,function(err, data) {

                             isOrderSubmitted = data.result;
                             console.log('isOrderSubmitted : '+isOrderSubmitted);
                             if(defined(data,"result")){
                                 isOrderSubmitted = data.result;
                                 if(isOrderSubmitted)
                                 {
                                     $scope.cart.cartLineItems = [];
                                     $scope.cart.OrderId=$scope.cart.CartId="";

                                 }
                                 else
                                 {
                                     APTSMD_ApttusLabService.getCartDetails(function(err, data) {

                                         var cartDetails= data.result;
                                         $scope.rawCart = jQuery.extend(true, {}, data.result);

                                         if(defined(cartDetails,"cartWrapper")){
                                             $scope.cart.CartId=cartDetails.cartWrapper.CartId;
                                             $scope.cart.OrderId=cartDetails.cartWrapper.OrderId;
                                             $scope.cart.cartLineItems = cartDetails.cartWrapper.cartLineItems;
                                             $rootScope.$apply(function(){   $scope.cart.cartLineItems =  cartDetails.cartWrapper.cartLineItems   });
                                         }
                                     });

                                 }
                             }

                         });
                         $timeout(function () {
                             init();
                             initProd();
                            }, 300);
                        }
                     }

                     $rootScope.thankyou=function(){
                       $scope.mode="thankyou";
                       localStorage.setItem("currentMode",$scope.mode);
                       $timeout(function(){
                           init();
                           initProd();
                           $scope.spinner.stop();
                       },300);
                   };

                   $rootScope.orderconfirm=function(regInfo){
                     var obj = $('#spin')
                     $scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
                     $('.pageLoad').show();
                     $scope.mode="orderconfirm";
                     localStorage.setItem("currentMode",$scope.mode);
                     $scope.IsShowHistoryOrder=false;
                     $scope.CurrentOrderInfo=regInfo;
                     $timeout(function(){
                         init();
                         initProd();
                     },300);
                 };

                 $rootScope.proposalConfirm=function(proposalInfo){
                     var obj = $('#spin')
                     $scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);

                     $scope.mode="proposalConfirm";
                     localStorage.setItem("currentMode",$scope.mode);
                               //$scope.IsShowHistoryOrder=false;
                               $scope.proposalInfo=proposalInfo;
                               $timeout(function(){
                                 init();
                                 initProd();
                             },300);
                           };

                           $rootScope.GetOrderDetail=function(order){
                             $('.pageLoad').show();
                             $scope.mode="orderconfirm";
                             localStorage.setItem("currentMode",$scope.mode);
                             $rootScope.CurrentOrderInfo=order;
                             $scope.IsShowHistoryOrder=true;
                             $timeout(function(){
                                 init();
                                 initProd();
                             },300);
                             $timeout(function () {
                                 $('.pageLoad').hide();
                             }, 1000);
                         };

                         $scope.OrderHistory= function() {
                             var obj = $('#spin')
                             //$scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
                             $('.pageLoad').show();
                             $scope.mode='orderhistory';
                             localStorage.setItem("currentMode",$scope.mode);
                             $timeout(function(){
                                 init();
                                 initProd();
                                 //$scope.spinner.stop();
                                 $('.pageLoad').hide();
                             },1000);

                         };

                         $scope.getAssetHistory= function() {

                             $scope.mode='assetdetail';
                             localStorage.setItem("currentMode",$scope.mode);
                             var obj = $('#spinAsset');
                             //$scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
                             $('.pageLoad').show();
                             $timeout(function(){
                                 init();
                                 initProd();
                                 $scope.spinner.stop();
                                 $('.pageLoad').hide();
                             },1000);

                         };
                         $scope.getMyDashboard= function() {
                             var obj = $('#spin')
                             //$scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
                             $('.pageLoad').show();
                             $scope.mode='myDashboard';
                             localStorage.setItem("currentMode",$scope.mode);
                             $timeout(function(){
                                 init();
                                 initProd();
                                 Highcharts.setOptions({
                                    colors: ['#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263',      '#6AF9C4']
                                });
                                $('#loyalty_donut').highcharts({
                                    chart: {
                                        type: 'pie',
                                        options3d: {
                                            enabled: true,
                                            alpha: 45
                                        }
                                    },
                                    title: {
                                        text: ''
                                    },
                                    subtitle: {
                                        text: ''
                                    },
                                    plotOptions: {
                                        pie: {
                                            innerSize: 200,
                                            depth: 45
                                        }
                                    },
                                    series: [{
                                        name: 'Loyalty',
                                        data: [
                                        ['Progress', 500000],
                                        ['Remaining', 200000],

                                        ]
                                    }],
                                    tooltip: {
                                        valueDecimals: 2,
                                        valuePrefix: '$'

                                    }
                                });
                                 //$scope.spinner.stop();
                                 $('.pageLoad').hide();
                             },1000);

                         };

                         $scope.goHome = function() {
                             $('.pageLoad').show();
                             $scope.currentPage = 0;
                             $scope.mode='main';
                             localStorage.setItem("currentMode",$scope.mode);
                             $timeout(function () {
                                 init();
                                 initProd();
                                 $scope.checkAndEnableBxSlider();
                                 document.body.scrollTop = document.documentElement.scrollTop = 0;

                             }, 300);

                             $timeout(function () {
                                 $('.pageLoad').hide();
                                   var categories = $scope.fullCategories;
                                   var tableString = recursiveTableStringGenerator(categories);
                                   //console.log('@@@@@tableString');
                                   //console.log(tableString);
                                   // console.log(document.getElementsByClassName('abc'));
                                   var topCat =   '<table class="tableCat" style="margin-left: 0px;">'+
                                                   '<tr>' +'<td style="width:20px;">'+'<div class="blackCircle"></div>'+'</td>'+'<td></td>'+
                                                  '<td class="slds-form-element__label">'+'<a class="topCategory" onclick="getAllCategory()">' +$scope.topCategoryName+'</a>'+'</td>'+ '</tr>'+'</table>';
                                        //console.log('>>MNS - '+topCat);
                                        //var temp = topCat+tableString;
                                   document.getElementsByClassName('catTable')[0].innerHTML=topCat+tableString;
                                   $scope.highlightSelectedCat();

                             }, 2000);
                         }

                         $scope.checkAndEnableBxSlider = function(){
                             if(storeObject.APTSMD_ShowTopDealWithCarousel__c == true && $scope.mode=='main'){
                             if ($('.TopDeal').closest('.bx-wrapper')[0]){
                                } else {
                                    $('.TopDeal').bxSlider({
                                          // CAROUSEL
                                          slideWidth: 400,
                                            minSlides: 1,
                                            maxSlides: 3,
                                            slideMargin: 10,
                                            speed:500,
                                            moveSlides:2
                                    });
                                }
                            }
                            if(storeObject.APTSMD_ShowPickedUpwithcarousel__c == true && $scope.mode=='main'){
                             if ($('.PickedUp').closest('.bx-wrapper')[0]){
                                } else {
                                    $('.PickedUp').bxSlider({
                                          // CAROUSEL
                                          slideWidth: 400,
                                            minSlides: 1,
                                            maxSlides: 3,
                                            slideMargin: 10,
                                            speed:500,
                                            moveSlides:2
                                    });
                                }
                            }
                            if(storeObject.APTSMD_ShowPastOrderwithcarousel__c == true && $scope.mode=='main'){
                             if ($('.PastOrder').closest('.bx-wrapper')[0]){
                                } else {
                                    $('.PastOrder').bxSlider({
                                          // CAROUSEL
                                          slideWidth: 400,
                                            minSlides: 1,
                                            maxSlides: 3,
                                            slideMargin: 10,
                                            speed:500,
                                            moveSlides:2
                                    });
                                }
                            }

                         }
                         $scope.UpdateCart=function(){
                               //console.log("call");
                               return;
                           };

                           $scope.goCheckout = function() {

                             if($scope.isValidUser == 'false'){
                                 console.log('>> Invalid user');
                                 $('#apttuslab_login').modal('show');
                             }else{
                                 $scope.mode='checkout';
                                 localStorage.setItem("currentMode",$scope.mode);
                                 APTSMD_ApttusLabService.IsOrderSubmitted($scope.cart.OrderId,function(err, data) {
                                     if(defined(data,"result")){
                                         var isOrderSubmitted = data.result;
                                         console.log('in go checkout: isOrderSubmitted : '+isOrderSubmitted);

                                         if(isOrderSubmitted)
                                         {
                                             $scope.cart.cartLineItems = [];
                                             $scope.cart.OrderId=$scope.cart.CartId="";
                                         }
                                         else
                                         {

                                             $timeout(function () {
                                                 init();
                                                 initProd();

                                             }, 300);

                                         }

                                     }


                                 });
                             }
                         }
                         $scope.createQuote = function() {
                             $('#quoteSpin').show();
                             if($scope.isValidUser == 'false'){
                                 console.log('>> Invalid user');
                                 $('#apttuslab_login').modal('show');
                             }else{
                                   // $scope.mode='quote';
                                   // localStorage.setItem("currentMode",$scope.mode);
                                   console.log($scope.cart);

                                   APTSMD_ApttusLabService.createQuote($scope.storePriceList,JSON.parse(angular.toJson($scope.cart)),function(err, data) {
                                     console.log('---createdd Quote---')   ;
                                     console.log(data.result);
                                     $rootScope.$apply(function(){
                                         $scope.cart.cartLineItems = [];
                                         $scope.cart.OrderId=$scope.cart.CartId="";
                                         $scope.proposalConfirm(data.result);
                                           // $scope.proposalInfo=data.result;

                                       });

                                 });
                               }
                           }
                           $scope.limitName = function(name, len) {
                             if(name === null || typeof name === 'undefined')
                                 return '';

                             if(name.length> len)
                                 name = name.substring(0,len) + '...';
                             return name;
                         }
                         $scope.currentProductScreen;

                         $scope.selectProduct = function(prod,screen)
                         {
                               var currentQuantity={currentQuantity:1};    //ToDo set init quantity value
                               $scope.currentProduct = jQuery.extend(true,currentQuantity, prod);
                               $scope.currentProductScreen = screen;
                               console.log('--currentProd---');
                               console.log($scope.currentProduct);

                               if(screen==true) {

                                APTSMD_ApttusLabService.getRecommendedProducts(prod.ProductId,$scope.storePriceList,$scope.contractpriceliststore3,function(err, data) {

                                     console.log('---cRecommened Product---')   ;
                                     console.log(data.result);
                                     $rootScope.$apply(function(){
                                         $scope.currentProduct.recommProds = data.result;
                                           // $scope.proposalInfo=data.result;
                                        $scope.mode='prod';
                                        localStorage.setItem("currentMode",$scope.mode);
                                        $timeout(function () {
                                            console.log('Carousel runing');
                                            $("#owl-slider").owlCarousel({

                                                navigation : false,
                                                slideSpeed : 300,
                                                paginationSpeed : 400,
                                                singleItem : true,
                                                autoPlay : 5000,
                                                margin: 0,
                                                padding: 0,
                                                items: 4
                                            });
                                            $('.recommSliderMain').bxSlider({
                                                slideWidth: 300,
                                                minSlides: 2,
                                                maxSlides: 4,
                                                slideMargin: 10,
                                                speed:800,
                                                moveSlides:1,
                                                infiniteLoop: false,
                                                hideControlOnEnd: true
                                            });
                                            $('.recommSliderMain').closest('.bx-viewport').css('margin-left','2%');
                                        }, 200);
                                       });

                                 });


                                 $timeout(function () {
                                     init();
                                     initProd();
                                     document.body.scrollTop = document.documentElement.scrollTop = 0;


                                }, 200);

                             }

                         };

                         $scope.getRandomCat = function(categories) {
                             var n = Math.floor(Math.random() * categories.length);
                             return categories[n].level1categoryName;
                         }

                         $scope.getRandomSubCat = function(categories) {
                             var n = Math.floor(Math.random() * categories.length);
                             if(categories[n].lstChildCategories !== null && typeof categories[n].lstChildCategories !== 'undefined') {
                                 var y = Math.floor(Math.random() * categories[n].lstChildCategories.length);
                                 return categories[n].lstChildCategories[y].strCategoryName;
                             } else {
                                 return '';
                             }
                         }

                         $scope.getImage = function(prodItem) {
                             return str.replace(prodItem.ImageUrl, "/apex", "");
                         }

                         $scope.formatAmount = function(amount) {
                             if(!defined(amount)) {
                                 amount=0;
                             }
                               //return parseFloat(Math.round(amount * 100) / 100).toFixed(2);
                               return (Math.round(amount * 100.00) / 100.00).toLocaleString('en-US', { minimumFractionDigits: 2 });
                           }

                           $scope.decodeEntities = function(s){
                             var str, temp= document.createElement('p');
                             temp.innerHTML= s;
                             str= temp.textContent || temp.innerText;
                             temp=null;
                             return str;
                         }
                         //takes a string in rtf format, converts it into standard html, and then place it in the ng-bind-html
                         $scope.rtfConvert = function(rtf){
                             var temp = "";
                             if(rtf == undefined)
                                 return rtf;
                             for (var i = 0; i < rtf.length; i++) {
                                if(rtf[i] == "&" && i + 3 < rtf.length)
                                {
                                    if(rtf[i+1] == "l" && rtf[i+2] == "t" && rtf[i+3] ==";")
                                    {
                                        temp+="<";
                                        i+=3;
                                    }
                                    else
                                    {
                                        if(rtf[i+1] == "g" && rtf[i+2] == "t" && rtf[i+3] ==";")
                                        {
                                            temp+=">";
                                            i+=3;
                                        }
                                        else
                                        {
                                            if(i + 4 < rtf.length && rtf[i+4] == ";")
                                            {
                                                temp+="'";
                                                //no idea why this works
                                                i+=8;
                                            }
                                            else
                                            {
                                                if(i + 5 < rtf.length && rtf[i+1] == "q" && rtf[i+2] == "u" && rtf[i+3] =="o" && rtf[i+4] =="t" && rtf[i+5] ==";")
                                                {
                                                    temp+="'";
                                                    i+=5;
                                                }
                                                else
                                                {
                                                    temp += rtf[i];

                                                }
                                            }

                                        }
                                    }
                                }
                                else
                                {
                                    temp += rtf[i];

                                }

                            }
                            return temp;
                         }
                        $scope.lineBreakName = function(name, len)
                                {
                                    console.log(name);
                                    if(name === null || typeof name === 'undefined')
                                        return '';
                                    for(var i = len; i < name.length; i+= len)
                                    {
                                        for( var j = i; j > i - len; j--)
                                        {
                                            if(name[j] = " ")
                                            {
                                                name = name.substring(0,j) + "\n" + name.substring(j, name.length);
                                                console.log(name);
                                                i = j;
                                                j = -1;
                                            }
                                        }
                                    }
                                    return name;
                                }
                         $scope.selectCategory = function(Level1CategoryId) {
                             if(!defined(Level1CategoryId)) return;


                             for(var i=0; i<$scope.categories.length; i++)
                                 $scope.categories[i].checked =$scope.categories[i].Level1CategoryId==Level1CategoryId;
                             for(var i=0; i<$scope.subUnionCats.length; i++)
                                 $scope.subUnionCats[i].checked=$scope.subUnionCats[i].Level1CategoryId==Level1CategoryId;
                             if($scope.mode!="main")
                             {
                                 $scope.mode="main";
                                 localStorage.setItem("currentMode",$scope.mode);
                                   //$scope.gohome();
                               }
                               $scope.filterList();
                           }
                           $scope.prodFilterTopDeal = function() {
                             if($scope.showTopDealTemp) {
                                 $scope.showTopDealTemp = false;
                             }else {
                                 $scope.showTopDealTemp = true;
                             }
                             $scope.showTopDeal=$scope.showTopDealTemp;
                         }
                         $scope.prodFilterpicked = function() {
                             if($scope.showPickedUpTemp) {
                                 $scope.showPickedUpTemp = false;
                             }else {
                                 $scope.showPickedUpTemp = true;
                             }
                             $scope.showPickedUp = $scope.showPickedUpTemp;
                         }
                         $scope.prodFilterPastorder = function() {
                             if($scope.showPastTemp) {
                                 $scope.showPastTemp = false;
                             }else {
                                 $scope.showPastTemp = true;
                             }
                             $scope.showPast = $scope.showPastTemp;
                         }
                         $scope.filterList = function() {
                             $scope.IsFilter=true;
                             $scope.selectedRefineSearch=[];
                             angular.forEach($scope.refineFieldsFilters,function(parentItem){
                                 angular.forEach(parentItem.wrapper,function(childItem){
                                     if(childItem.status == true){
                                         $scope.selectedRefineSearch.push(childItem);
                                     }
                                 });
                             });
                             console.log('$scope.selectedRefineSearch ');
                             console.log($scope.selectedRefineSearch);
                             var obj = $('#spin')
                             $scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
                               var prods = new Array();
                             var categoriesSelected = [];
                             var allProds = [];
                             $scope.currentPage = 0;

                               console.log('Going into loop');
                                 if($scope.selectedRefineSearch.length == 0) {
                               for(var i=0; i<$scope.filteredProds.length; i++){
                                                console.log('No filter');
                                                $scope.filteredProds[i].showProduct = true;
                                  }
                              }
                              $scope.searchProdIds = [];
                               if($scope.selectedRefineSearch.length >0) {
                                console.log('filter in MS');
                                console.log($scope.filteredProds);
                                   for(var i=0; i<$scope.filteredProds.length; i++){
                                       // if($scope.filteredProds[i].showProduct == true) {
                                           console.log('filter');
                                       angular.forEach($scope.selectedRefineSearch,function(refineCriteria){
                                            console.log('filter loop');
                                            if($scope.filteredProds[i].Refinesearchstring.indexOf(refineCriteria.name) >= 0 && refineCriteria.status==true){
                                               $scope.searchProdIds.push($scope.filteredProds[i].ProductId);
                                                //$scope.filteredProds[i].showProduct = true;
                                               // console.log($scope.fullProds[i]);
                                            }else {
                                                 //$scope.filteredProds[i].showProduct = false;
                                            }
                                        });
                                    }
                                    console.log('>>> selected serch ids : ');
                                    console.log($scope.searchProdIds);
                                    //set all the prodcuts to false
                                    for(var i=0; i<$scope.filteredProds.length; i++){
                                        $scope.filteredProds[i].showProduct = false;
                                    }
                                    if($scope.searchProdIds.length>0){
                                        for(var i=0; i<$scope.filteredProds.length; i++){
                                               if($scope.searchProdIds.indexOf($scope.filteredProds[i].ProductId)>-1){
                                                    $scope.filteredProds[i].showProduct = true;
                                               }
                                        }
                                    }
                               }

                              // $scope.$apply();
        //                       for(var i=0; i<$scope.fullProds.length; i++){
        //                         //   console.log($scope.fullProds[i].rating);
        //                         //   console.log($scope.fullProds[i].availability);
        //                           if($scope.selectedRefineSearch.length > 0){

        //                               angular.forEach($scope.selectedRefineSearch,function(refineCriteria){

        //                                   console.log('refine criteria:' + refineCriteria.name);
        //                                 //   Boolean resultrefine=($scope.fullProds[i].Refinesearchstring.contains(refineCriteria.name);
        //                                 //   if(($scope.fullProds[i].rating == refineCriteria.name || $scope.fullProds[i].availability == refineCriteria.name) && refineCriteria.status==true){
        //                                 console.log($scope.fullProds[i].Refinesearchstring);
        //                                 console.log($scope.fullProds[i].Refinesearchstring.indexOf(refineCriteria.name));
        //                                 if($scope.fullProds[i].Refinesearchstring.indexOf(refineCriteria.name) >= 0 && refineCriteria.status==true){
        //                                       $scope.fullProds[i].showProduct = true;
        //                                   }
        //                                   else{
        //                                       $scope.fullProds[i].showProduct = false;
        //                                       console.log('noooo');
        //                                       console.log(allProds);
        //                                         console.log(prods);
        //                                       //prods.length = 0;
        //                                       // console.log(prods);
        //                                     //   allProds = [];

        //                                   }
        //                               });
        //                           }
        //                           else{
        //                               console.log('Last else');
        //                               if(filterCheckCat($scope.fullProds[i]))
        //                               {
        //                                   console.log('Last else22222');
        //                                   prods.push($scope.fullProds[i]);
        //                                   allProds.push($scope.fullProds[i]);
        //                               }
        //                           }

        //                           //  }
        //                       }
        //                       console.log('---Prods---');
        //                       console.log(prods);
        //                       console.log($scope.prods);

        //                       /*.forEach($scope.categories,function(item){
        //   if(item.checked == true) {
        //         categoriesSelected.push(item);
        //   }
        // });

        // var refine=[];
        // $scope.tempData=[];
        // // console.log(categoriesSelected);
        //  Visualforce.remoting.Manager.invokeAction(
        //              '{!$RemoteAction.APTSMD_ApttusLabAngularJS.getAllSelectedFilters}', JSON.stringify(categoriesSelected),
        //              function(result, event) {
        //                 if(result != null){
        //                      refine = result;
        //                      //console.log(refine);

        //                      console.log('in Remoting');
        //                      $scope.saveFilters(result);
        //                      $scope.$apply();
        //                      //console.log( $scope.refineFields);
        //                      //$scope.$apply();
        //                   }
        //               // window.location=result;
        //                 });

        //                 console.log($scope.tempData);*/

        //              var chk = _.findWhere($scope.categories, {checked: true});
        //              // console.log(chk);
        //              if(prods.length == 0 && !defined(chk)) {
        //                  $scope.IsFilter=false;
        //                  for(var i=0; i<$scope.fullProds.length; i++) {
        //                      prods.push($scope.fullProds[i]);
        //                  }
        //              }

        //              $scope.saveFilters = function(data){
        //                  console.log(data);
        //                  $scope.refineFieldsFilters.push(data[0]);
        //                  console.log($scope.refineFieldsFilters);
        //              }
        //              console.log($scope.refineFieldsFilters);
        //              $scope.products=[];
        //              for (var i = 0; i < prods.length; i++) {
        //                  if (i % $scope.itemsPerPage.value  === 0) {
        //                      $scope.products[Math.floor(i / $scope.itemsPerPage.value)] = [prods[i]];
        //                  }
        //                  else {
        //                      $scope.products[Math.floor(i / $scope.itemsPerPage.value)].push(prods[i]);
        //                  }
        //              }
                   $scope.spinner.stop();
               }

               $scope.priceFilter = function(minVal,maxVal) {
                   var prods = [];

                   for(var i=0; i<$scope.filteredProds.length; i++) {
                       var productPrice = $scope.filteredProds[i].PriceItem.Apttus_Config2__ListPrice__c;

                       if(productPrice >= minVal && productPrice <= maxVal) {
                           prods.push($scope.filteredProds[i]);
                       }
                   }

                   $scope.products=[];
                   $scope.products[0] = prods;
               }

               $scope.filterProducts = function(item) {
                   return function (item) {
                       var chk = _.findWhere($scope.categories, {Level1CategoryId: item.ancestorCategoryId});
                       if(defined(chk,"checked")) {
                           if(chk.checked) {
                               return 1;
                           } else {
                               return filterCheckSub(item);
                           }
                       } else {
                           return filterCheckSub(item);
                       }
                   }
               }

               function filterCheckCat(item) {
                   var chk = _.findWhere($scope.categories, {Level1CategoryId: item.ancestorCategoryId});
                   if(defined(chk,"checked")) {
                       if(chk.checked) {
                           return 1;
                       } else {
                           return filterCheckSub(item);
                       }
                   } else {
                       return filterCheckSub(item);
                   }
               }

               function filterCheckSub(item) {
                 var chk = _.findWhere($scope.subUnionCats, {strCategoryId: item.parentCategoryId});
                 if(defined(chk,"checked")) {
                     if(chk.checked)
                         return 1;
                     else return 0;
                 } else {
                     return 0;
                 }
             }
             $scope.highlightSelectedCat = function(){
                $( ".tableCat" ).each(function() {
                  $(this).find( "tr" ).each(function() {
                    if($(this).hasClass("active-cat")){
                        $(this).removeClass("active-cat");
                        $(this).find( "a" ).each(function() {
                            $(this).removeClass("active-cat-font");
                        });
                    }
                  });
                });
                if($scope.selCatColor!=''){
                    $(".sel"+$scope.selCatColor).closest("tr").addClass("active-cat");
                    $(".sel"+$scope.selCatColor).addClass("active-cat-font");

                    //remove active class from top most category
                    $(".topCategory").closest("tr").removeClass("active-cat");
                    $(".topCategory").removeClass("active-cat-font");
                }else{ //top most category is selected
                    $(".topCategory").closest("tr").addClass("active-cat");
                    $(".topCategory").addClass("active-cat-font");
                }
             }
             //MNS-on click of top most category..show all products
             $scope.getAllCategoryProducts = function(){
                     $scope.currentPage=0;
                     console.log('>> All Products');
                 $rootScope.$apply(function(){
                     $scope.currentPage=0;
                     $scope.filteredProds = $scope.fullProds;
                    // console.log($scope.filteredProds.length);
                     $scope.products = [];
                     for (var i = 0; i < $scope.filteredProds.length; i++) {
                         $scope.filteredProds[i].showProduct = true;
                         $scope.filteredProds[i].showfilter=true;

                         if (i % $scope.itemsPerPage.value === 0) {
                             $scope.products[Math.floor(i / $scope.itemsPerPage.value)] = [$scope.filteredProds[i]];
                         }
                         else {
                             $scope.products[Math.floor(i / $scope.itemsPerPage.value)].push($scope.filteredProds[i]);
                         }
                     }
                    //console.log( $scope.products);
                    //to highlight the selected category
                    $scope.selCatColor='';
                    $scope.highlightSelectedCat();


                  });

             }
             getAllCategory = $scope.getAllCategoryProducts;
                        //tree code
                        //MNS-
                        $scope.selCatColor;


                        $scope.categoryDFS = function (items, id)
                        {
                                 var retVal;
                            //console.log(items);
                                 angular.forEach(items, function(item){

                                     if(item.Level1CategoryId == id) {
                                         retVal = item;
                                         //console.log('foundem');
                                         return;

                                     }

                                         var temp = $scope.categoryDFS(item.childcat, id);
                                        console.log(temp);
                                         if(temp != undefined)
                                             {
                                                 //console.log('setting retval');
                                             retVal = temp;
                                             return;
                                                 }


                                 });

                                 /*console.log('retval');
                            console.log(retVal);*/
                                 return retVal;
                                 //return;
                                 /*if(item.childcat == null)
                                return null;
                                 angular.forEach(item.childcat,function(itemchild){
                                     if(itemchild.Level1CategoryId == id) {
                                         return itemchild;
                                     }
                                     else
                                     {
                                         var temp;
                                         id = $scope.recursiveCatSearch(itemchild);
                                         if(temp != null)
                                             return temp;

                                     }
                                    });*/

                        }
                        $scope.isCheckCategory = function(id) {
                        //debugger;
                              console.log(id);
                              $scope.selCatColor = id;
                              $scope.highlightSelectedCat();
                            /*var chk = _.findWhere($scope.categories, {Level1CategoryId: id});
                              if(typeof chk === 'undefined' ){*/
                            chk = $scope.categoryDFS($scope.categories, id);
                                  /*angular.forEach($scope.categories,function(item){
                                        var temp =$scope.recursiveCatSearch($scope.categories);
                                        if(temp!=null)
                                            chk = temp;

                                  });
                              }*/
                            //   if()
                            //MNS- Show filter prods in Pagination list
                            //$scope.products = [];
                            var searchedproducts=[];
                              console.log('chk');
                              console.log(chk);
                              var chk1=[];
                            //   var chk1 = _.findWhere($scope.refineFieldsFilters, {categoryId: id});
                               angular.forEach($scope.refineFieldsFilters,function(item){
                                   console.log('outside refine filter cate');
                                    if(item.categoryId.indexOf(id) >= 0 ) {
                                        item.showfilter = true;
                                        chk1.push(item);
                                        console.log('Inside refine filter cate');
                                        console.log(chk1);
                                        console.log(typeof chk1);
                                    }else{
                                        item.showfilter = false;
                                    }


                                });
                            //   console.log(chk1.categoryId);
                              if(typeof chk === 'undefined' ){
                                  angular.forEach($scope.categories,function(item){
                                      if(item.childcat !=null){
                                           var chk = _.findWhere(item.childcat, {Level1CategoryId: id});
                                            if(typeof chk === 'undefined' ){
                                                 angular.forEach($scope.fullProds,function(item){
                                                          item.showProduct=false;

                                                  });
                                       }else{
                                  angular.forEach($scope.fullProds,function(item){

                                      if(chk.Level1CategoryId == item.parentCategoryId){

                                          item.showProduct = true;
                                          console.log(item);
                                          searchedproducts.push(item);
                                      }
                                      else{
                                          item.showProduct=false;
                                      }
                                  });
                              }
                                      }

                                  });

                                //   angular.forEach($scope.fullProds,function(item){

                                //           item.showProduct=false;

                                //   });
                              }
                              else{
                                  angular.forEach($scope.fullProds,function(item){

                                      if(chk.Level1CategoryId == item.parentCategoryId){

                                          item.showProduct = true;
                                          console.log(item);
                                          searchedproducts.push(item);
                                      }
                                      else{
                                          item.showProduct=false;
                                      }
                                  });
                              }
                            //   if(typeof chk1 === 'undefined' ){
                            //       angular.forEach($scope.refineFieldsFilters,function(item){
                            //                 console.log('in refine outside');
                            //               item.showfilter=false;

                            //       });
                            //   }

                            //   else{
                            //       angular.forEach($scope.refineFieldsFilters,function(item){
                            //           console.log('in refine');
                            //           for (var i = 0; i < chk1.length; i++) {
                            //               if(chk1[i].categoryId == item.categoryId){
                            //                   console.log('in refine1');
                            //                   item.showfilter = true;
                            //                   console.log(item);
                            //               }
                            //               else{
                            //                   console.log('in refine2');
                            //                   item.showfilter=false;
                            //               }
                            //           }

                            //       });
                            //   }
                             // $scope.groupToPages($scope.itemsPerPage);


                              $rootScope.$apply(function(){
                                 $scope.currentPage=0;
                                 $scope.products = [];
                                for (var i = 0; i < searchedproducts.length; i++) {
                                     if (i % $scope.itemsPerPage.value  === 0) {
                                         $scope.products[Math.floor(i / $scope.itemsPerPage.value)] = [searchedproducts[i]];
                                     }
                                     else {
                                         $scope.products[Math.floor(i / $scope.itemsPerPage.value)].push(searchedproducts[i]);
                                     }
                                 }
                                 $scope.filteredProds = searchedproducts;
                              });
                              console.log($scope.products);
                 if(defined(chk,"checked")) {
                     return chk.checked;
                 }
                 else return false;
             }
                         onCategoryClick=$scope.isCheckCategory;
                           function recursiveTableStringGenerator(node){
                                 var allParent ='';
                               var childLevel = false;
                                // console.log('hello');
                                 if(node != null) {
                                     var maxNode = 0;
                                     for(var i=0 ; i<node.length ; i++){
                                            if(maxNode < node[i].level1categoryName.length)
                                                maxNode = node[i].level1categoryName.length;
                                         }
                                    for(var i=0 ; i<node.length ; i++){
                                    var trStyle=' <tr>';
                                    if(node[i].Level1CategoryId==$scope.selCatColor){
                                        trStyle = ' <tr class="active-cat">';
                                    }
                                     var treeView =   '<table class="tableCat" style="margin-left: 0px;">'+
                                                      trStyle;


                                      if(node[i].childcat!=null && node[i].childcat.length>0){
                                          treeView += '      <td style="width:20px;">';
                                          treeView = treeView +'<i style="margin-top:5px;" id="'+node[i].Level1CategoryId+'_cat" onclick="$( \'.'+node[i].Level1CategoryId+'\' ).toggle();$(this).toggleClass(\'fa icon-Icon_057 fa icon-Icon_056\');" class="fa icon-Icon_057 fa-lg slds-form-element__label"></i>';
                                           console.log(node[i].childcat +'Node');
                                          if(node[i].childcat !=null) {
                                              console.log(node[i].childcat);
                                              for(var j=0 ; j<node[i].childcat.length ; j++)  {

                                                  recursiveTableStringGenerator(node[i].childcat[j]);
                                              }

                                          }
                                      }else{
                                          /*if(node[i].level1categoryName.length == maxNode && maxNode > 35)
                                            treeView = treeView + '      <td style="padding-right:20px; width: 0px;">';
                                          else*/
                                              treeView += '      <td style="width:20px;">';
                                          //treeView = treeView + '<div class="blackCircle"></div>';
                                      }

                                     treeView = treeView +'</td>'+
                                                      '      <td></td>'+
                                                      '      <td class="slds-form-element__label">';
                                                      if(node[i].childcat!=null && node[i].childcat.length>0){
                                                          treeView = treeView +'<a class=\'sel'+node[i].Level1CategoryId+'\' onclick="$( \'.'+node[i].Level1CategoryId+'\' ).toggle();$(\'#'+node[i].Level1CategoryId+'_cat\').toggleClass(\'fa icon-Icon_057 fa icon-Icon_056\');" style=cursor:pointer;>'+node[i].level1categoryName+'</a>';                                                      }
                                                      else{
                                                        var nameSplit1 = '';
                                                          var nameSplit2 = '';
                                                          if(node[i].level1categoryName.length > 30)
                                                          {

                                                              for(var j = 30; j > 0; j--)
                                                              {
                                                                  if(node[i].level1categoryName[j] == ' ')
                                                                  {
                                                                      nameSplit1 = node[i].level1categoryName.substring(0, j);
                                                                      nameSplit2 = node[i].level1categoryName.substring(j+1, node[i].level1categoryName.length);

                                                                      treeView = treeView +'<a class=\'sel'+node[i].Level1CategoryId+'\' onclick="onCategoryClick(\''+node[i].Level1CategoryId+'\');"  style=cursor:pointer;>'+nameSplit1+'<br/>'+nameSplit2+'</a>';
                                                                      break;
                                                                  }
                                                              }
                                                          }
                                                          else
                                                              treeView = treeView +'<a class=\'sel'+node[i].Level1CategoryId+'\' onclick="onCategoryClick(\''+node[i].Level1CategoryId+'\');"  style=cursor:pointer;>'+node[i].level1categoryName+'</a>';

                                                      }

                                                      treeView = treeView +'</td>'+
                                                      '      <td></td>'+
                                                      '  </tr>'+
                                                      '  <tr class="allToggles '+node[i].Level1CategoryId+'" style="display:none;">'+
                                                      '      <td></td>'+
                                                      '      <td></td>'+
                                                      '      <td>$$childTable$$</td>'+
                                                      '  </tr>'+
                                                      '  </table>';
                                     treeView = treeView.replace('$$accountName$$',node[i].level1categoryName);
                                     treeView = treeView.replace('$$boolean$$', node[i].checkbox);
                                     treeView = treeView.replace('$$childTable$$' ,recursiveTableStringGenerator(node[i].childcat));
                                     allParent = allParent + treeView;
                                 }


                                 }

                                 return allParent ;
                            }
                            //end
             $scope.checkCategory = function(id) {
                 var chk = _.findWhere($scope.categories, {Level1CategoryId: id});
                 if(defined(chk,"checked")) {
                     chk.checked = !chk.checked;
                 } else {
                     chk.checked = true;
                 }
             }

             $scope.isCheckSubCategory = function(id) {
                 var chk = _.findWhere($scope.subUnionCats, {strCategoryId: id});
                 if(defined(chk,"checked")) {
                     return chk.checked;
                 }
                 else return false;
             }
             $scope.prodNames=[];
             $scope.checkSubCategory = function(id) {
                 var chk = _.findWhere($scope.subUnionCats, {strCategoryId: id});
                 if(defined(chk,"checked")) {
                     chk.checked = !chk.checked;
                 } else {
                     chk.checked = true;
                 }
             }

             $scope.spinner=null;
                           /*$timeout(function () {
        var obj = $('#spin')
        $scope.spinner = new Spinner(spinnerOptions).spin(obj[0]);
      }, 300);
      */
      APTSMD_ApttusLabService.userDetails(function(err,data){
         $scope.userNameStr=data.result;
     });

      APTSMD_ApttusLabService.getContactUsInfo(function(err,data){
         $scope.contactUs=data.result;
     });

      var storePriceList = $scope.storePriceList;
      var contractpriceliststore2 = $scope.contractpriceliststore3;
      var refinesearchquecvf2 = $scope.refinesearchquecvf;
      console.log('PRICCE LIST');
      console.log(storePriceList);
      APTSMD_ApttusLabService.getCategoriesList(storePriceList,function(err, data) {

       var categories = data.result;
       console.log('************Tree structure');
       console.log(categories);
       //Tree code
       var tableString = recursiveTableStringGenerator(categories);
       //console.log('tableString');
       //console.log(tableString);
       var topCat =   '<table class="tableCat" style="margin-left: 0px;">'+
                          '<tr>' +'<td style="width:20px;">'+'<div class="blackCircle"></div>'+'</td>'+'<td></td>'+
                '<td class="slds-form-element__label">'+'<a class="topCategory" onclick="getAllCategory()">' +$scope.topCategoryName+'</a>'+'</td>'+ '</tr>'+'</table>';
               // console.log('>>MNS - '+topCat);
                //var temp = topCat+tableString;
       document.getElementsByClassName('catTable')[0].innerHTML=topCat+tableString;

       //end
         $scope.fullCategories = data.result;
         console.log($scope.fullCategories);
         $scope.subCats = {};
         $scope.subUnionCats = [];
         $scope.products = [];

           APTSMD_ApttusLabService.getProductsList(storePriceList,contractpriceliststore2,refinesearchquecvf2,function(err, data) {

             var prods = data.result;
             $scope.fullProds = data.result;
             $scope.filteredProds = data.result;
             console.log('Full Products');
             console.log($scope.fullProds);
             //$scope.groupToPages($scope.itemsPerPage);
           //console.log('Data : '+ data.result);
           for(var i=0; i<prods.length; i++) {
               //console.log('Data : '+prods[i]);
               //prods[i].cat = $scope.getRandomCat(categories);
               //prods[i].subCat = $scope.getRandomSubCat(categories);

               //prods[i].cat = prods[i].ancestorCategoryId;
               //prods[i].subCat = prods[i].parentCategoryId;

       /*if(prods[i].PriceItem !== null && typeof prods[i].PriceItem !== 'undefined') {
              var n = Math.floor(Math.random() * 100);
              if(prods[i].PriceItem.Apttus_Config2__ListPrice__c == 0) {
                prods[i].PriceItem.Apttus_Config2__ListPrice__c = n;
                if(n > 10) {
                  prods[i].PriceItem.Apttus_Config2__SalePrice__c = n-10;
                } else {
                  prods[i].PriceItem.Apttus_Config2__SalePrice__c = n;
                }
              }
            }*/
                         }
      $scope.setTypeHeadNames();

      //MNS
      $scope.getCartSuggestedProduct();
      APTSMD_ApttusLabService.getCartDetails(function(err, data) {

       var cartDetails= data.result;
       $scope.rawCart = jQuery.extend(true, {}, data.result);

       if(defined(cartDetails,"cartWrapper"))
           $scope.cart = cartDetails.cartWrapper;

       $rootScope.$apply(function(){
           $scope.products = jQuery.extend(true, {}, prods);
           $scope.categories = categories;
                                 //Gurbir
                                 $scope.groupToPages($scope.itemsPerPage);
                                 //Gurbir
                                 if($scope.categories.length>0)
                                   $scope.Inkcategory=$scope.categories[0].Level1CategoryId;
                               for(var i=0; i<categories.length; i++) {
                                   var cat = categories[i];
                                   if(defined(cat,"lstChildCategories"))
                                       $scope.subCats[categories[i].Level1CategoryId] = categories[i].lstChildCategories;
                               }
                               $scope.subUnionCats = _.flatten($scope.subCats);

                                 //$scope.spinner.stop();


                                 $timeout(function () {
                                   init();
                                   initProd();
                               }, 300);

                                 $timeout(function () {
                                   $('.pageLoad').hide();
                               }, 600);
                             });
   });
  });
     });
                 $scope.getCartSuggestedProduct = function(){
                    APTSMD_ApttusLabService.getCartSuggestedProduct(function(err, data) {
                        var cartDetails= data.result;
                        console.log('>>> Card Details MNS : ');
                        console.log(cartDetails);

                        if(defined(cartDetails,"cartWrapper")){
                            $scope.alsoBoughtProds = [];
                            $rootScope.$apply(function(){
                                //MSN
                                $scope.alsoBoughtProds = $scope.getSuggestedProds(cartDetails.suggestedProdIds);

                            });
                        }

                    });
                 }


                           //--------for TypeHead
                           $scope.setTypeHeadNames  =function(){

                             angular.forEach($scope.fullProds,function(prod){
                                 $scope.prodNames.push(prod.ProductName);
                             });
                               //console.log('-----product Names--------');
                               //console.log($scope.prodNames);
                               $scope.$apply();
                               // $('#name').typeahead({
                               //   name: 'search',
                               //   local: prodNames,

                               // });



                           }
                           //----------------Compare Product Code - Harshit
                           //console.log('abcd');
                           $scope.FeatureListItem = 'Hello';
                           $scope.comparedData = [];
                           $scope.productDetails = [];
                           $scope.goCompare = function() {
                             console.log('in goComparweis');
                             $scope.comparedData = [];
                             $scope.productDetails = [];
                             var listOfCheckBoxes = document.getElementsByClassName('compareProdCheck');
                             var idsSplittedByComma = $scope.getSelectedProdIds();
                               /*for(var i=0; listOfCheckBoxes[i]; ++i){
              if(listOfCheckBoxes[i].checked){
                   idsSplittedByComma += listOfCheckBoxes[i].value + ',';
              }
          }*/
          var temp = idsSplittedByComma.split(",");
          var temp1 = []
          for(var i=0;i<temp.length-1;i++){
           $scope.productDetails.push(_.findWhere($scope.fullProds, {ProductId: temp[i]}));
       }
       console.log('------new list---');
       console.log(temp1);

                     //    Visualforce.remoting.Manager.invokeAction(
                     //     '{!$RemoteAction.APTSMD_ApttusLabAngularJS.getProductDetails}',
                     //     idsSplittedByComma ,
                     //     function(result, event){
                     //     //var ComparedProducts = JSON.stringify(result);
                     //     console.log('>>FeatureSet Details:');
                     //     console.log(result);
                     //     //$scope.productDetails = result;
                     //     $scope.$apply();
                     //     },
                     //     {escape: true}
                     // );

                     Visualforce.remoting.Manager.invokeAction(
                       '{!$RemoteAction.APTSMD_ApttusLabAngularJS.getFeatureSets}',
                       idsSplittedByComma ,
                       function(result, event){
                             //var ComparedProducts = JSON.stringify(result);
                             console.log(result);
                             $scope.comparedData = result;
                             $scope.$apply();
                         },
                         {escape: true}
                         );

                 }


                 $scope.getSelectedProdIds = function(){
                   $scope.selectedIds ='';
                   angular.forEach($scope.fullProds,function(items){
                       if(items.isComparable){
                           $scope.selectedIds+= items.ProductId+',';
                       }
                   });
                   angular.forEach($scope.guidedProducts,function(items){
                       if(items.isComparable){
                           $scope.selectedIds+=items.ProductId+',';
                       }
                   });
                   angular.forEach($scope.topDealProducts,function(items){
                       if(items.isComparable){
                           $scope.selectedIds+=items.ProductId+',';
                       }
                   });

                   angular.forEach($scope.pickedUpProducts,function(items){
                       if(items.isComparable){
                           $scope.selectedIds+=items.ProductId+',';
                       }
                   });
                   angular.forEach($scope.pastOrderProducts,function(items){
                       if(items.isComparable){
                           $scope.selectedIds+=items.ProductId+',';
                       }
                   });

                   console.log('selected prod Ids : '+ $scope.selectedIds);
                   return  $scope.selectedIds;
               };
               $scope.showCompare = false;
               $scope.checkIfAnySelected = function() {
                               //Loop through all the product list to check if any checkbox is selected
                               //alert('in compare check');
                               //var listOfCheckBoxes = document.getElementsByClassName('compareProdCheck');
                               $scope.checkedBoxesCount= 0;
                               angular.forEach($scope.fullProds,function(items){
                                 if(items.isComparable){
                                     $scope.checkedBoxesCount++;
                                 }
                             });
                               angular.forEach($scope.guidedProducts,function(items){
                                 if(items.isComparable){
                                     $scope.checkedBoxesCount++;
                                 }
                             });
                               angular.forEach($scope.topDealProducts,function(items){
                                 if(items.isComparable){
                                     $scope.checkedBoxesCount++;
                                 }
                             });

                               angular.forEach($scope.pickedUpProducts,function(items){
                                 if(items.isComparable){
                                     $scope.checkedBoxesCount++;
                                 }
                             });

                               angular.forEach($scope.pastOrderProducts,function(items){
                                 if(items.isComparable){
                                     $scope.checkedBoxesCount++;
                                 }
                             });

                               console.log('$scope.checkedBoxesCount : '+$scope.checkedBoxesCount);
                               if($scope.checkedBoxesCount > 1){
                                 $scope.showCompare = true;
                             }else{
                                 $scope.showCompare = false;
                             }


       }




       var checkoutMode = '{!$CurrentPage.parameters.checkout}';
       if(checkoutMode==1){
         console.log('in checkout mode featureset called');
         $scope.getFeaturset();
         console.log($scope.alsoBoughtProds);
         $scope.mode='cart';
                               //$scope.goCheckout();


                           }else{
                             $scope.mode='main';
                         }
                         localStorage.setItem("currentMode",$scope.mode);



                     }]);

function filterCheckbox($container, type)
{
 $container.find('input[type="checkbox"]').on('change', function() {
     var filters = [];
     $container.find('input[type="checkbox"]:checked').each(function() {
         this_filter = $(this).val();
         if ( filters.indexOf(this_filter) === -1 && this_filter !== undefined )
         {
             filters.push(this_filter);
         }
     });


     var products = $product_layout.find('.mix-item').filter(function() {
         if ( filters.length == 0 ) return true;
         var $this = $(this),
         filter = $this.find(' > .product').data(type),
         filter_arr;

         if ( filter !== undefined )
         {
             filter_arr = filter.split('|');
             for ( var i = 0; i < filter_arr.length; i++ )
             {
                 if ( filters.indexOf(filter_arr[i]) !== -1 ) return true;
             }
             return false;
         }
     });

     $product_layout.isotope({
         filter: products
     });
 });
}

                       //Gurbir
                       if ( !String.prototype.contains ) {
                         String.prototype.contains = function() {
                             return String.prototype.indexOf.apply( this, arguments ) !== -1;
                         }};
                       //End

                       function defined(ref, strNames) {
                         var name;

                         if(ref === null || typeof ref === "undefined") {
                             return false;
                         }

                         if(strNames !== null && typeof strNames !== "undefined") {
                             var arrNames = strNames.split('.');
                             while (name = arrNames.shift()) {
                                 if (ref[name] === null || typeof ref[name] === "undefined") return false;
                                 ref = ref[name];
                             }
                         }
                         return true;
                     }

                     function isNull(text){
                         if(defined(text))
                             return text;
                         else
                             return '';
                     }


                 </script>
                 <style>
                    .paginator>.active{background:#ccc; color:white;}
                </style>

                <apex:form >
                <!-- MODAL LOGIN -->
                <apex:actionFunction action="{!login}" name="loginJS" rerender="loginErrorMessageSection,loginErrorMessageSection2">
                <apex:param name="mode" value="" assignTo="{!mode}"/>
            </apex:actionFunction>

            <div class="modal modal_apttuslab modal_login fade" id="apttuslab_login" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" >
                <div class="slds" style="color: #706f6f !important;">
                    <div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 25% !important;">
                            <div class="slds-modal__header" style="background-color: #F7F7F7;">
                                <button class="slds-button slds-button--neutral modal-cancel" aria-hidden="true" data-dismiss="modal" id="loginCancelButton" style="" type="button">X</button>
                                <span class="slds-text-heading--medium">{!$Label.APTSMD_Login}</span>
                                <p style="color: #706f6f;">{!$Label.APTSDMP_NotRegistered} <a href="https://www.kuka.force.com/KUKA_communitiesSelfRegPage" style="text-decoration: underline;">{!$Label.APTSDMP_CreateAccount}</a></p>
                            </div>
                            <div class="slds-modal__content">
                                <div>
                                    <!--<span class="slds-text-heading--medium"></span>
                                    <br/><br/>-->
                                    <div role="form slds-form-element">
                                        <div class="form-group headerLoginInputFormG" style="text-align: center; ">
                                            <span class="ico-error textarea-error"> </span>
                                            <apex:outputpanel layout="none"  id="loginErrorMessageSection2">
                                            <apex:outputpanel rendered="{!loginMessage != ''}">
                                            <div id="login-message-panel" style="background-color: #f2dede;color: #a94442;padding: 5px;">
                                                <apex:outputpanel rendered="{!APTSMD_showErrorLogin}"  styleClass="form-group loginHeaderErrorID">
                                                <script>
                                                                                                                  $(function(){
                                                                                                                      $('.loginHeaderErrorID').show();
                                                                                                                      $('.headerLoginInputFormG').addClass('error_msg');
                                                                                                                 });
                                                            </script>
                                                            {!loginMessage}
                                                        </apex:outputpanel>
                                                    </div></apex:outputpanel>
                                                </apex:outputpanel>
                                                <!--<div class-="clearfix"></div>
                                                <div class-="clearfix"></div>-->
                                                <!--<label for="loginEmailInput" class="slds-form-element__label">{!$Label.APTSMD_Email}:</label><br/>-->
                                                <input type="email" class="kuka-input" id="loginEmailInput" style="width: 80%; font-size: 12pt;" placeholder="{!$Label.APTSMD_Email}"/>
                                            </div>
                                            <div class="form-group headerLoginInputFormG" style="text-align:center;">
                                                <span class="ico-error textarea-error"> </span>
                                                <!--<label for="loginPasswordInput" class="slds-form-element__label">{!$Label.APTSMD_Password}:</label><br/>-->
                                                <input type="password" class="kuka-input" id="loginPasswordInput" style="width: 80%; font-size: 12pt;" placeholder="{!$Label.APTSMD_Password}"/>
                                                <apex:outputpanel layout="none"  id="loginErrorMessageSection">
                                                <apex:outputpanel styleClass="form-group error_msg alert_error_popover loginHeaderErrorID">
                                                <script>
                                                    $("#loginPasswordInput").keyup(function(event){
                                                        if(event.keyCode == 13){
                                                            $("#userLoginBTN").click();
                                                        }
                                                    });
                                                    /* $(function(){
                                                        $('.loginHeaderErrorID').show();
                                                        $( "#loginPasswordInput" ).focus();
                                                         $('.loginHeaderErrorID').hide();
                                                          $('.headerLoginInputFormG').removeClass('error_msg');
                                                      });*/
                                                        $( "#loginEmailInput" ).focus(function() {
                                                            /*$('.loginHeaderErrorID').hide();
                                                            $('.headerLoginInputFormG').removeClass('error_msg');*/
                                                            $('#login-message-panel').hide();
                                                        });
                                                        $( "#loginCancelButton" ).click(function() {
                                                            $("#loginEmailInput").val("");
                                                            $("#loginPasswordInput").val("");
                                                            $('.loginHeaderErrorID').hide();
                                                            $('.headerLoginInputFormG').removeClass('error_msg');
                                                            $('#login-message-panel').hide();
                                                        });



                                                        $("#apttuslab_login").on("change", function(event) {
                                                            aria-hidden(this);
                                                            $("#loginEmailInput").val("");
                                                            $("#loginPasswordInput").val("");
                                                            $('.loginHeaderErrorID').hide();
                                                            $('.headerLoginInputFormG').removeClass('error_msg');
                                                        } );

                                                    </script>
                                                </apex:outputpanel>
                                            </apex:outputpanel>
                                        </div>
                                        <span id="loginUser">
                                            <apex:inputHidden value="{!loginUser}" />
                                        </span>
                                        <span id="loginPassword">
                                            <apex:inputHidden value="{!loginPassword}" />
                                        </span>
                                    </div>
                                </div>
                                <div style="text-align:center;">
                                    <button type="button" class="kuka-submit" id="userLoginBTN" onClick="fillLoginDataAndLogin();" style="">{!$Label.APTSMD_Login}</button>
                                    <br/>
                                    <a href="https://my.kuka.com/s/login/ForgotPassword" style="cursor:pointer;text-decoration:underline;color: #706f6f;">{!$Label.APTSDMP_ForgotPassword}</a>
                                </div>
                            </div>
                            <!--<div class="slds-modal__footer" style="background-color:#F7F7F7; text-align:center;">



                            </div>-->
                        </div>
                    </div>
                    <div class="slds-modal-backdrop slds-modal-backdrop--open"></div>
                </div>
            </div>

            <script>
                function fillLoginDataAndLogin() {

                    // $('.loginHeaderErrorID').hide();
                    //$('.headerLoginInputFormG').removeClass('error_msg');

                    $('#loginUser input').val($('#loginEmailInput').val());
                    $('#loginPassword input').val($('#loginPasswordInput').val());
                    var cMode = localStorage.getItem("currentMode");
                    //alert('--In Login--');
                    console.log('mode: '+localStorage.getItem("currentMode"));
                    loginJS(cMode);

                    // $('.loginHeaderErrorID').show();
                    // $('.headerLoginInputFormG').addClass('error_msg');

                }
            </script>
            <!-- END MODAL LOGIN -->
        </apex:form>
        <c:APTSDMP_LanguageSelect />
    </body>
    </html>
</apex:page>